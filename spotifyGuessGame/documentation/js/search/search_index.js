var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.101,1,0.821]],["body/components/AppComponent.html",[0,0.189,1,1.44,2,0.22,3,0.183,4,1.235,5,1.235,6,1.235,7,0.148,8,3.066,9,1.147,10,2.079,11,2.079,12,4.808,13,1.512,14,4.808,15,1.512,16,4.808,17,0.338,18,0.961,19,5.718,20,1.512,21,0.38,22,0.028,23,1.979,24,1.147,25,0.469,26,3.647,27,0.22,28,0.183,29,0.183,30,0.22,31,0.919,32,1.628,33,1.628,34,1.628,35,1.336,36,1.235,37,0.445,38,1.235,39,0.919,40,1.235,41,0.919,42,1.405,43,1.628,44,0.852,45,1.147,46,1.147,47,1.512,48,1.235,49,0.919,50,1.235,51,0.852,52,1.628,53,0.919,54,1.147,55,1.066,56,0.919,57,1.235,58,0.919,59,1.235,60,0.919,61,1.235,62,0.919,63,1.066,64,1.235,65,0.919,66,0.99,67,1.235,68,1.235,69,0.02,70,0.02]],["title/modules/AppModule.html",[71,1.382,72,2.142]],["body/modules/AppModule.html",[0,0.134,1,1.468,2,0.121,3,0.1,7,0.081,22,0.029,27,0.399,28,0.1,29,0.192,30,0.121,31,0.504,41,1.25,42,0.585,44,1.252,49,1.35,51,1.252,53,1.35,56,1.306,58,1.25,60,1.306,66,0.543,69,0.013,70,0.013,71,1.624,72,4.399,73,1.085,74,2.516,75,2.516,76,3.079,77,1.681,78,1.681,79,1.681,80,1.681,81,1.681,82,2.693,83,4.172,84,2.951,85,2.951,86,3.262,87,1.45,88,2.105,89,1.347,90,2.693,91,3.262,92,1.25,93,2.693,94,2.048,95,1.315,96,1.189,97,2,98,3.116,99,3.116,100,2.293,101,1.315,102,2.293,103,2,104,3.116,105,1.189,106,2,107,2,108,3.116,109,1.315,110,3.116,111,2.293,112,2.048,113,3.116,114,1.681,115,3.116,116,1.322,117,1.681,118,2,119,3.116,120,2,121,3.829,122,2,123,3.116,124,3.116,125,1.322,126,3.116,127,3.829,128,2,129,3.829,130,2,131,2.62,132,1.681,133,2.62,134,1.681,135,3.116,136,2,137,3.116,138,2,139,1.471,140,0.996,141,1.681,142,1.681,143,1.681,144,1.471,145,2,146,0.996,147,2.62,148,1.471,149,1.681,150,1.315,151,1.681,152,2,153,1.471,154,1.315,155,2,156,1.681,157,1.085,158,2,159,2,160,1.471,161,1.471,162,3.829,163,2,164,2,165,2,166,2,167,4.323,168,0.677,169,2,170,2,171,3.116,172,3.116,173,2.048]],["title/components/ChatComponent.html",[0,0.101,39,0.821]],["body/components/ChatComponent.html",[0,0.176,1,0.723,2,0.173,3,0.144,4,0.972,5,0.972,6,0.972,7,0.116,9,0.903,10,2.009,11,1.978,13,1.283,15,1.283,17,0.266,18,0.815,20,1.493,21,0.538,22,0.029,23,1.557,24,0.903,25,0.751,27,0.246,28,0.144,29,0.144,30,0.173,31,0.723,32,1.381,33,1.381,34,1.381,35,1.276,36,0.972,37,0.506,38,0.972,39,1.302,40,0.972,41,0.723,42,1.192,43,1.381,44,0.67,45,0.903,46,0.903,47,1.283,48,0.972,49,0.723,50,0.972,51,0.67,52,1.381,53,0.723,54,0.903,55,0.839,56,0.723,57,0.972,58,0.723,59,0.972,60,0.723,61,0.972,62,0.723,63,0.839,64,0.972,65,0.723,66,0.779,67,0.972,68,0.972,69,0.017,70,0.017,174,2.413,175,1.381,176,2.013,177,4.77,178,4.08,179,4.08,180,1.529,181,3.065,182,3.398,183,0.633,184,4.346,185,1.403,186,3.43,187,0.445,188,2.87,189,2.574,190,4.08,191,0.752,192,0.752,193,2.87,194,0.551,195,1.109,196,2.87,197,3.43,198,2.87,199,3.43,200,2.87,201,2.87,202,2.112,203,0.621,204,2.87,205,2.87,206,2.87,207,4.08,208,2.87,209,2.87,210,4.08,211,4.08,212,4.08]],["title/injectables/ChatService.html",[189,1.623,213,0.23]],["body/injectables/ChatService.html",[2,0.197,3,0.164,7,0.132,17,0.303,18,0.892,20,1.6,21,0.641,22,0.029,25,0.778,27,0.345,28,0.164,29,0.164,30,0.197,35,0.763,37,0.471,66,1.485,69,0.019,70,0.019,89,1.485,92,1.378,140,1.627,146,1.627,168,1.852,180,1.592,181,1.627,182,3.344,183,0.693,184,3.755,186,3.755,187,0.507,189,2.224,191,0.937,192,0.937,194,0.665,195,0.763,197,3.755,199,3.755,203,0.707,213,0.36,214,2.747,215,5.469,216,3.252,217,5.469,218,3.268,219,4.467,220,3.755,221,4.467,222,3.268,223,3.405,224,3.268,225,3.268,226,3.268,227,3.268,228,1.944,229,1.773,230,1.944,231,1.773,232,1.773,233,2.656,234,3.268,235,3.268,236,4.467,237,1.944,238,1.284,239,5.088,240,1.944,241,3.268,242,1.106,243,3.268,244,1.773]],["title/components/CreateRoomComponent.html",[0,0.101,41,0.821]],["body/components/CreateRoomComponent.html",[0,0.171,1,0.606,2,0.145,3,0.121,4,0.814,5,0.814,6,0.814,7,0.097,9,0.757,10,1.965,11,1.911,13,1.128,15,1.349,17,0.223,18,0.717,20,1.678,21,0.53,22,0.029,23,1.305,24,0.757,25,0.731,27,0.322,28,0.121,29,0.18,30,0.216,31,0.606,32,1.214,33,1.214,34,1.214,35,1.111,36,0.814,37,0.526,38,0.814,39,0.606,40,0.814,41,1.198,42,1.697,43,1.214,44,0.562,45,0.757,46,0.757,47,1.496,48,0.814,49,0.606,50,0.814,51,0.562,52,1.214,53,0.904,54,1.678,55,1.254,56,0.606,57,0.814,58,0.606,59,0.814,60,0.606,61,0.814,62,0.606,63,0.703,64,0.814,65,0.606,66,1.164,67,0.814,68,0.814,69,0.015,70,0.015,87,1.39,88,2.017,89,1.291,109,3.816,111,1.769,112,1.581,125,1.02,140,1.198,154,1.581,175,1.214,176,1.819,180,1.081,183,0.557,185,1.291,187,0.557,191,0.443,192,0.443,194,0.417,195,1.002,203,0.52,213,0.17,242,1.214,245,3.816,246,1.581,247,2.639,248,2.639,249,3.343,250,2.76,251,1.999,252,3.025,253,3.498,254,2.022,255,3.498,256,3.156,257,3.606,258,1.686,259,3.587,260,2.405,261,2.405,262,3.343,263,2.405,264,2.405,265,2.405,266,3.015,267,2.405,268,2.022,269,1.43,270,1.769,271,1.769,272,2.022,273,1.769,274,2.022,275,2.022,276,2.022,277,2.022,278,2.022,279,2.022,280,2.022,281,1.522,282,1.769,283,2.022,284,1.769,285,2.022,286,3.587,287,2.405]],["title/components/CreateSnackBar.html",[0,0.101,44,0.761]],["body/components/CreateSnackBar.html",[0,0.184,1,0.714,2,0.171,3,0.142,4,0.96,5,0.96,6,0.96,7,0.115,9,0.892,10,2.005,11,1.931,13,1.272,15,1.272,17,0.262,18,0.808,20,1.617,21,0.566,22,0.029,23,2.558,24,1.829,25,0.727,27,0.244,28,0.142,29,0.203,30,0.244,31,0.714,32,1.369,33,1.369,34,1.369,35,1.201,36,0.96,37,0.436,38,0.96,39,0.714,40,0.96,41,0.714,42,1.182,43,1.369,44,1.201,45,1.903,46,1.709,47,1.617,48,0.96,49,0.714,50,0.96,51,0.662,52,1.369,53,0.714,54,0.892,55,0.828,56,0.714,57,0.96,58,0.714,59,0.96,60,0.714,61,0.96,62,0.714,63,0.828,64,0.96,65,0.714,66,0.769,67,0.96,68,0.96,69,0.017,70,0.017,88,1.202,125,1.202,183,0.628,185,1.395,187,0.628,191,0.522,192,0.522,194,0.329,195,0.662,213,0.363,242,1.913,251,1.114,281,2,288,4.279,289,2.086,290,3.4,291,3.4,292,4.321,293,4.321,294,2.835,295,4.044,296,2.835,297,3.4,298,2.835,299,2.086,300,2.835,301,3.4,302,2.835,303,2.405,304,3.4,305,2.383,306,3.4,307,2.383,308,2.383,309,2.383,310,2.383,311,2.383,312,2.383,313,2.383,314,2.383,315,4.044,316,3.4]],["title/components/CreateUserComponent.html",[0,0.101,49,0.821]],["body/components/CreateUserComponent.html",[0,0.172,1,0.676,2,0.162,3,0.135,4,0.908,5,0.908,6,0.908,7,0.109,9,0.844,10,1.987,11,1.953,13,1.223,15,1.223,17,0.248,18,0.777,20,1.438,21,0.522,22,0.029,25,0.713,27,0.302,28,0.135,29,0.135,30,0.162,31,0.676,32,1.316,33,1.316,34,1.316,35,1.171,36,0.908,37,0.542,38,0.908,39,0.676,40,0.908,41,0.676,42,1.815,43,1.316,44,0.627,45,0.844,46,0.844,47,1.223,48,0.908,49,1.263,50,0.908,51,0.627,52,1.316,53,0.676,54,0.844,55,0.784,56,0.676,57,0.908,58,0.676,59,0.908,60,0.676,61,0.908,62,0.676,63,0.784,64,0.908,65,0.676,66,0.728,67,0.908,68,0.908,69,0.016,70,0.016,89,1.36,92,1.263,105,1.596,140,1.336,144,4.209,146,1.336,168,1.937,173,2.555,175,1.316,176,1.939,180,1.548,183,0.603,185,1.36,187,0.416,191,0.494,192,0.494,194,0.451,195,0.908,203,0.58,245,3.76,251,1.054,252,2.98,256,2.86,273,1.974,317,2.255,318,3.887,319,3.887,320,4.472,321,5.012,322,2.683,323,4.209,324,3.887,325,2.683,326,2.683,327,3.843,328,2.683,329,2.683,330,3.887,331,1.596,332,2.683,333,2.683,334,2.683,335,2.683,336,2.683,337,2.255,338,2.255,339,2.683,340,3.887,341,3.887,342,3.268]],["title/components/DialogComponent.html",[0,0.101,51,0.761]],["body/components/DialogComponent.html",[0,0.18,1,0.777,2,0.186,3,0.155,4,1.045,5,1.045,6,1.045,7,0.125,9,0.971,10,2.032,11,2.004,13,1.35,15,1.35,17,0.286,18,0.858,21,0.514,22,0.029,25,0.721,27,0.259,28,0.155,29,0.155,30,0.186,31,0.777,32,1.453,33,1.453,34,1.453,35,1.247,36,1.045,37,0.457,38,1.045,39,0.777,40,1.045,41,0.777,42,1.255,43,1.453,44,0.721,45,0.971,46,0.971,47,1.35,48,1.045,49,0.777,50,1.045,51,1.247,52,1.453,53,0.777,54,1.553,55,0.902,56,0.777,57,1.045,58,0.777,59,1.045,60,0.777,61,1.045,62,0.777,63,0.902,64,1.045,65,0.777,66,0.838,67,1.045,68,1.045,69,0.018,70,0.018,125,1.309,148,4.273,183,0.666,187,0.666,191,0.568,192,0.568,194,0.499,195,1.153,213,0.303,242,1.966,249,3.687,252,3.174,262,3.817,270,2.27,281,2.463,282,2.27,284,2.27,299,2.27,343,4.273,344,2.594,345,4.293,346,4.293,347,4.487,348,2.594,349,3.086,350,3.086,351,3.086,352,3.086,353,3.086,354,3.086,355,4.293,356,3.086,357,3.086,358,3.086]],["title/components/DialogRoomForm.html",[0,0.101,53,0.821]],["body/components/DialogRoomForm.html",[0,0.175,1,0.648,2,0.155,3,0.129,4,0.87,5,0.87,6,0.87,7,0.104,9,0.809,10,1.987,11,1.915,13,0.809,15,1.403,17,0.238,18,0.753,20,1.185,21,0.464,22,0.029,25,0.673,27,0.329,28,0.129,29,0.189,30,0.227,31,0.648,32,1.276,33,1.276,34,1.276,35,1.147,36,0.87,37,0.484,38,0.87,39,0.648,40,0.87,41,0.949,42,1.65,43,1.276,44,0.601,45,0.809,46,0.809,47,1.719,48,0.87,49,0.648,50,0.87,51,0.601,52,1.276,53,1.237,54,1.821,55,1.528,56,0.648,57,0.87,58,0.648,59,0.87,60,0.648,61,0.87,62,0.648,63,0.751,64,0.87,65,0.648,66,1.023,67,0.87,68,0.87,69,0.016,70,0.016,87,1.101,88,1.598,89,1.023,109,3.592,111,1.892,112,1.69,125,1.091,140,1.28,154,1.69,175,0.87,176,1.598,180,1.124,183,0.585,185,0.698,187,0.585,191,0.474,192,0.474,194,0.438,195,1.042,203,0.556,213,0.266,242,1.912,245,3.592,246,1.69,247,1.892,248,1.892,249,3.592,250,2.665,251,1.01,252,3.11,253,1.892,255,2.772,256,1.892,257,2.161,258,1.01,262,3.711,266,2.161,268,2.161,269,1.529,270,1.892,271,1.892,272,2.161,273,1.892,274,2.161,275,2.161,276,2.161,277,2.161,278,2.161,279,2.161,280,3.168,281,2.318,282,1.892,283,4.129,284,1.892,285,2.161,299,1.892,348,2.161,359,2.571,360,2.571,361,2.571,362,2.571,363,2.571]],["title/components/GameRoomComponent.html",[0,0.101,56,0.821]],["body/components/GameRoomComponent.html",[0,0.187,1,0.881,2,0.211,3,0.176,4,1.184,5,1.184,6,1.184,7,0.141,9,1.1,10,2.068,11,2.045,13,1.47,15,1.47,17,0.324,22,0.028,25,0.601,27,0.211,28,0.176,29,0.176,30,0.211,31,0.881,32,1.583,33,1.583,34,1.583,35,1.313,36,1.184,37,0.433,38,1.184,39,0.881,40,1.184,41,0.881,42,1.366,43,1.583,44,0.817,45,1.1,46,1.1,47,1.47,48,1.184,49,0.881,50,1.184,51,0.817,52,1.583,53,0.881,54,1.1,55,1.022,56,1.416,57,2.085,58,0.881,59,1.184,60,0.881,61,1.184,62,0.881,63,1.022,64,1.184,65,0.881,66,1.43,67,1.184,68,1.184,69,0.02,70,0.02,153,3.875,175,1.583,176,2.234,183,0.725,185,1.526,187,0.817,194,0.406,195,0.817,246,2.298,247,3.439,248,3.439,364,4.427,365,3.496,366,3.496]],["title/interceptors/HttpResponseHandling.html",[86,2.142,367,2.142]],["body/interceptors/HttpResponseHandling.html",[2,0.224,3,0.187,7,0.15,17,0.344,21,0.507,22,0.029,25,0.626,27,0.37,28,0.187,29,0.187,30,0.224,37,0.45,69,0.021,70,0.021,86,3.199,87,1.683,88,2.443,112,2.442,116,1.576,175,1.258,180,0.936,183,0.755,187,0.576,191,0.896,192,0.896,194,0.565,203,0.803,213,0.344,251,1.46,258,1.912,367,2.442,368,3.715,369,4.091,370,3.715,371,5.427,372,3.715,373,4.091,374,4.841,375,2.944,376,4.841,377,3.715,378,2.733,379,2.702,380,4.091,381,4.091,382,4.866,383,4.866,384,3.123,385,2.016,386,3.715,387,3.715,388,3.715,389,3.715,390,4.866,391,3.715,392,3.715,393,4.091,394,3.715,395,3.715,396,3.123]],["title/interfaces/JoinRoomResponse.html",[397,1.382,398,1.768]],["body/interfaces/JoinRoomResponse.html",[0,0.082,2,0.16,3,0.133,7,0.107,17,0.245,18,0.77,20,1.873,21,0.401,22,0.029,24,1.212,27,0.344,28,0.133,29,0.133,30,0.16,35,0.9,37,0.357,69,0.016,70,0.016,87,1.126,89,0.72,92,0.971,116,1.125,168,1.87,180,1.436,181,1.32,185,0.72,194,0.702,203,0.573,213,0.272,216,1.577,223,2.292,228,1.577,229,1.439,230,1.577,231,1.439,232,1.439,233,2.964,237,2.292,238,2.295,240,1.577,242,1.87,244,1.439,250,1.439,251,1.042,258,1.042,281,1.926,303,2.292,375,1.439,379,2.261,385,1.439,397,2.246,398,2.091,399,1.577,400,2.704,401,2.091,402,1.743,403,1.743,404,1.577,405,2.091,406,1.743,407,1.743,408,1.743,409,1.743,410,1.439,411,1.743,412,1.439,413,1.743,414,1.743,415,1.743,416,1.743,417,2.533,418,1.577,419,1.743,420,1.743,421,1.577,422,2.984,423,1.743,424,2.984,425,1.743,426,1.743,427,1.743,428,1.743,429,1.743,430,1.743,431,1.743,432,2.533,433,2.533,434,1.743,435,1.743,436,1.743,437,1.439,438,1.743,439,1.743,440,1.743,441,1.743,442,1.743,443,1.743,444,1.743,445,1.743,446,1.743,447,1.743,448,1.577,449,1.743,450,1.743,451,1.743,452,1.743,453,1.743,454,1.743,455,1.743,456,1.743,457,1.743,458,1.743,459,1.577,460,1.743,461,1.577,462,1.577,463,1.577,464,1.743,465,1.743,466,1.743,467,1.743]],["title/components/MenuComponent.html",[0,0.101,58,0.821]],["body/components/MenuComponent.html",[0,0.177,1,0.734,2,0.176,3,0.146,4,0.986,5,0.986,6,0.986,7,0.118,9,0.916,10,2.014,11,1.983,13,1.297,15,1.297,17,0.27,21,0.303,22,0.029,25,0.669,27,0.331,28,0.146,29,0.146,30,0.176,31,0.734,32,1.395,33,1.395,34,1.395,35,1.215,36,0.986,37,0.443,38,0.986,39,0.734,40,0.986,41,0.734,42,1.205,43,1.395,44,0.68,45,0.916,46,0.916,47,1.297,48,0.986,49,0.734,50,0.986,51,0.68,52,1.395,53,0.734,54,0.916,55,0.851,56,0.734,57,1.62,58,1.311,59,0.986,60,0.734,61,0.986,62,0.734,63,1.666,64,0.986,65,0.734,66,0.79,67,0.986,68,0.986,69,0.017,70,0.017,92,1.311,100,2.142,101,1.914,125,1.235,146,1.45,156,2.448,157,1.58,168,1.62,175,1.395,176,2.029,180,1.038,183,0.64,185,1.412,187,0.452,191,0.536,192,0.536,194,0.556,195,1.118,468,2.448,469,4.122,470,4.122,471,4.122,472,5.203,473,5.203,474,4.122,475,5.203,476,4.785,477,5.203,478,2.823,479,2.912,480,2.912,481,2.912,482,2.912,483,2.912,484,2.448,485,2.912,486,2.912,487,2.912,488,2.912,489,2.912,490,2.912,491,2.912,492,2.912,493,2.912,494,2.912,495,4.122,496,5.203,497,4.122,498,4.122,499,4.122,500,4.122]],["title/injectables/NavigationService.html",[87,0.952,213,0.23]],["body/injectables/NavigationService.html",[2,0.249,3,0.207,7,0.167,17,0.382,21,0.43,22,0.029,25,0.77,27,0.314,28,0.207,29,0.207,30,0.249,37,0.482,69,0.022,70,0.022,87,1.521,105,2.454,183,0.808,187,0.64,191,0.959,192,0.959,194,0.662,195,1.332,203,0.892,213,0.403,238,2.046,323,4.407,331,3.392,337,4.377,338,4.795,501,3.469,502,5.99,503,6.307,504,4.126,505,4.126,506,4.126,507,5.206,508,4.126,509,4.126,510,4.126,511,4.126]],["title/pipes/PipePipe.html",[82,1.768,512,2.142]],["body/pipes/PipePipe.html",[2,0.262,3,0.218,7,0.176,9,1.368,20,1.838,21,0.453,22,0.029,24,1.838,25,0.559,27,0.262,28,0.218,29,0.218,30,0.262,37,0.541,69,0.023,70,0.023,82,2.919,175,1.473,183,0.675,191,0.801,192,0.801,194,0.625,331,2.587,512,3.84,513,3.657,514,6.477,515,4.35,516,5.381,517,5.842,518,4.35,519,5.381,520,4.35,521,4.35,522,4.35]],["title/injectables/ResponseSnackbarService.html",[88,1.382,213,0.23]],["body/injectables/ResponseSnackbarService.html",[0,0.169,2,0.227,3,0.189,7,0.152,10,1.182,13,1.182,15,1.182,17,0.348,18,0.98,21,0.511,22,0.029,24,1.182,25,0.702,27,0.296,28,0.189,29,0.246,30,0.296,37,0.454,44,0.878,45,1.82,46,1.542,47,1.182,69,0.021,70,0.021,88,2.08,125,1.594,183,0.761,185,1.02,187,0.761,191,0.903,192,0.903,194,0.436,195,0.878,213,0.409,242,1.66,251,1.927,281,2.315,288,4.256,289,2.765,290,3.16,291,3.16,292,3.16,293,3.16,297,3.16,301,3.16,304,3.16,305,3.16,306,5.173,307,3.16,308,5.044,309,4.122,310,3.16,311,3.16,312,3.16,313,3.16,314,3.16,523,4.904,524,3.759,525,3.759,526,3.759,527,3.759]],["title/injectables/RestApiService.html",[89,0.885,213,0.23]],["body/injectables/RestApiService.html",[0,0.062,2,0.12,3,0.1,7,0.081,17,0.184,18,0.621,20,1.73,21,0.487,22,0.029,24,0.977,25,0.8,27,0.312,28,0.1,29,0.1,30,0.12,35,0.726,37,0.521,42,0.908,69,0.013,70,0.013,87,1.261,89,0.843,92,1.087,116,0.845,168,1.583,180,1.546,181,0.992,183,0.482,185,1.171,187,0.309,191,0.953,192,0.953,194,0.738,195,1.008,203,0.431,213,0.27,216,2.565,223,2.271,228,1.185,229,1.081,230,1.185,231,1.081,232,1.081,233,2.565,237,1.848,238,2.033,240,1.185,242,1.904,244,1.081,250,1.081,251,1.695,258,1.501,281,2.333,303,1.848,375,1.081,379,1.902,385,1.081,397,1.83,398,1.081,399,1.185,400,2.34,401,2.34,402,1.31,403,1.31,404,1.185,405,1.686,406,1.31,407,1.31,408,1.31,409,1.31,410,1.081,411,2.835,412,1.686,413,1.31,414,1.31,415,1.31,416,1.31,417,2.042,418,1.185,419,1.31,420,1.31,421,2.565,422,3.401,423,2.042,424,2.51,425,1.31,426,1.31,427,2.51,428,2.51,429,2.835,430,1.31,431,2.042,432,2.835,433,2.042,434,1.31,435,2.042,436,1.31,437,1.081,438,1.31,439,1.31,440,1.31,441,1.31,442,1.31,443,1.31,444,1.31,445,1.31,446,1.31,447,1.31,448,1.185,449,1.31,450,1.31,451,1.31,452,1.31,453,1.31,454,1.31,455,2.042,456,1.31,457,2.042,458,1.31,459,2.565,460,1.31,461,1.848,462,1.185,463,2.565,464,1.31,465,2.835,466,2.835,467,2.835,528,3.107,529,3.107,530,3.107,531,2.286,532,1.466,533,3.107,534,1.993,535,1.993,536,1.993,537,1.993,538,1.993,539,1.993,540,1.993,541,1.993,542,1.993,543,1.993,544,1.993,545,1.993,546,1.993,547,1.993,548,1.993,549,1.993,550,1.993]],["title/modules/RoomModule.html",[71,1.382,84,1.938]],["body/modules/RoomModule.html",[2,0.222,3,0.185,7,0.149,22,0.029,27,0.39,28,0.185,29,0.288,30,0.222,31,0.929,39,1.542,65,1.651,69,0.021,70,0.021,71,2.055,73,2.002,74,3.555,75,2.425,76,3.555,84,3.953,89,1.662,92,1.542,94,3.184,95,2.425,96,2.194,102,3.564,131,4.072,132,3.101,133,4.072,134,3.101,139,2.714,140,1.837,146,1.837,189,3.048,202,2.714,269,2.194,551,3.101,552,3.101,553,3.101,554,3.101,555,3.689,556,4.072,557,3.689,558,3.689]],["title/components/RoomsComponent.html",[0,0.101,60,0.821]],["body/components/RoomsComponent.html",[0,0.169,1,0.648,2,0.155,3,0.129,4,0.87,5,0.87,6,0.87,7,0.104,9,0.809,10,1.973,11,1.937,13,1.185,15,1.185,17,0.238,18,0.753,21,0.464,22,0.029,23,1.395,24,1.185,25,0.673,27,0.329,28,0.129,29,0.129,30,0.155,31,0.648,32,1.276,33,1.51,34,1.276,35,1.147,36,0.87,37,0.455,38,0.87,39,0.648,40,0.87,41,0.648,42,1.101,43,1.276,44,0.601,45,0.809,46,0.809,47,1.185,48,0.87,49,0.648,50,0.87,51,0.601,52,1.276,53,0.648,54,0.809,55,0.751,56,0.648,57,0.87,58,0.648,59,0.87,60,1.237,61,0.87,62,0.648,63,0.751,64,0.87,65,0.648,66,1.604,67,0.87,68,0.87,69,0.016,70,0.016,82,1.395,87,1.435,90,2.665,92,1.237,93,2.665,141,2.161,142,2.161,143,2.161,146,1.28,147,2.161,150,1.69,151,2.161,154,1.69,168,1.51,175,1.276,176,1.892,180,1.488,183,0.585,185,1.333,187,0.399,191,0.694,192,0.694,194,0.518,195,0.88,203,0.556,238,1.01,258,1.753,320,4.396,400,2.42,559,2.161,560,3.768,561,3.768,562,4.129,563,3.168,564,2.571,565,4.461,566,3.768,567,3.768,568,3.768,569,2.571,570,2.571,571,2.571,572,2.571,573,2.571,574,2.571,575,3.768,576,2.571,577,2.571,578,2.571,579,2.161,580,2.571,581,3.768,582,2.571,583,2.571,584,2.571,585,2.571,586,2.571,587,2.571,588,3.768,589,3.768]],["title/interfaces/RoomsResponse.html",[397,1.382,405,1.768]],["body/interfaces/RoomsResponse.html",[0,0.079,2,0.154,3,0.129,7,0.104,17,0.237,18,0.751,20,1.955,21,0.544,22,0.029,24,1.183,27,0.34,28,0.129,29,0.129,30,0.154,35,0.878,37,0.483,69,0.016,70,0.016,87,1.099,89,0.696,92,0.947,116,1.087,168,1.507,180,1.421,181,1.276,185,0.696,194,0.697,203,0.554,213,0.266,216,1.524,223,2.236,228,1.524,229,1.391,230,1.524,231,1.391,232,1.391,233,2.916,237,2.236,238,2.273,240,1.524,242,1.848,244,1.391,250,2.661,251,1.007,258,1.007,281,1.889,303,3.246,375,1.391,379,2.217,385,1.391,397,2.215,398,1.391,399,1.524,400,2.04,401,2.04,402,1.685,403,1.685,404,1.524,405,2.416,406,3.224,407,3.224,408,1.685,409,1.685,410,1.391,411,1.685,412,1.391,413,1.685,414,1.685,415,1.685,416,1.685,417,2.471,418,1.524,419,1.685,420,1.685,421,1.524,422,2.926,423,1.685,424,2.926,425,1.685,426,1.685,427,1.685,428,1.685,429,1.685,430,1.685,431,1.685,432,2.471,433,2.471,434,1.685,435,1.685,436,1.685,437,1.391,438,1.685,439,1.685,440,1.685,441,1.685,442,1.685,443,1.685,444,1.685,445,1.685,446,1.685,447,1.685,448,1.524,449,1.685,450,1.685,451,1.685,452,1.685,453,1.685,454,1.685,455,1.685,456,1.685,457,1.685,458,1.685,459,1.524,460,1.685,461,1.524,462,1.524,463,1.524,464,1.685,465,1.685,466,1.685,467,1.685]],["title/injectables/RoomsServiceService.html",[90,1.768,213,0.23]],["body/injectables/RoomsServiceService.html",[2,0.227,3,0.189,7,0.152,17,0.349,18,0.981,21,0.511,22,0.029,25,0.772,27,0.329,28,0.189,29,0.189,30,0.227,37,0.455,69,0.021,70,0.021,89,1.572,90,2.665,181,2.445,183,0.762,187,0.585,191,0.905,192,0.905,194,0.728,203,0.815,213,0.386,229,2.044,238,1.48,242,1.275,316,3.167,379,1.876,421,2.24,461,2.921,531,3.613,590,5.176,591,3.167,592,5.464,593,5.79,594,5.79,595,3.767,596,4.911,597,5.464,598,3.767,599,3.767,600,3.767,601,3.767,602,3.767,603,3.767,604,3.767,605,3.767,606,3.767,607,3.767,608,2.772,609,3.767,610,4.911,611,3.767,612,3.767,613,3.767]],["title/modules/SpotifyApiModule.html",[71,1.382,85,1.938]],["body/modules/SpotifyApiModule.html",[2,0.253,3,0.211,7,0.17,22,0.029,27,0.374,28,0.211,29,0.264,30,0.253,31,1.059,62,1.596,63,1.539,69,0.022,70,0.022,71,2.234,73,2.28,74,3.78,75,2.762,76,3.78,85,3.866,94,3.461,95,2.762,96,2.499,102,3.874,157,2.28,269,2.499,478,3.437,484,3.532,556,4.427,614,3.532,615,3.532,616,3.532,617,2.762,618,4.202,619,3.091,620,4.202]],["title/injectables/SpotifyApiService.html",[213,0.23,621,2.397]],["body/injectables/SpotifyApiService.html",[2,0.295,3,0.246,7,0.198,22,0.028,25,0.629,27,0.295,28,0.246,29,0.246,30,0.295,69,0.025,70,0.025,187,0.954,213,0.435,621,4.251,622,4.858,623,4.115,624,4.895]],["title/components/SpotifyComponentComponent.html",[0,0.101,62,0.821]],["body/components/SpotifyComponentComponent.html",[0,0.198,1,0.866,2,0.207,3,0.173,4,1.163,5,1.163,6,1.163,7,0.139,9,1.081,10,2.063,11,2.039,13,1.453,15,1.453,17,0.318,22,0.028,25,0.594,27,0.207,28,0.173,29,0.173,30,0.207,31,0.866,32,1.564,33,1.564,34,1.564,35,1.304,36,1.163,37,0.428,38,1.163,39,0.866,40,1.163,41,0.866,42,1.35,43,1.564,44,0.803,45,1.081,46,1.081,47,1.453,48,1.163,49,0.866,50,1.163,51,0.803,52,1.564,53,0.866,54,1.081,55,1.004,56,0.866,57,1.163,58,0.866,59,1.163,60,0.866,61,1.163,62,1.407,63,1.845,64,1.163,65,0.866,66,0.933,67,1.163,68,1.163,69,0.02,70,0.02,157,2.833,175,1.564,176,2.215,183,0.717,185,1.516,187,0.81,194,0.399,195,0.803,617,3.432,619,3.841,625,2.889,626,4.621,627,4.621,628,3.436,629,3.436,630,4.621]],["title/injectables/SpotifyRestService.html",[213,0.23,478,1.768]],["body/injectables/SpotifyRestService.html",[2,0.222,3,0.185,7,0.149,17,0.342,18,0.968,21,0.504,22,0.029,25,0.787,27,0.292,28,0.185,29,0.185,30,0.222,37,0.501,69,0.021,70,0.021,116,1.565,157,3.385,180,1.363,183,0.752,187,0.573,191,0.996,192,0.996,194,0.667,195,1.342,203,0.798,213,0.382,238,1.904,401,3.116,412,2.628,478,2.628,532,2.714,562,4.828,608,3.564,617,4.101,631,3.101,632,5.743,633,4.844,634,5.743,635,4.844,636,4.844,637,3.689,638,4.844,639,3.689,640,4.844,641,3.689,642,3.689,643,3.689,644,3.689]],["title/interceptors/TokenInterceptor.html",[91,2.142,367,2.142]],["body/interceptors/TokenInterceptor.html",[2,0.232,3,0.193,7,0.156,17,0.356,21,0.519,22,0.029,25,0.64,27,0.364,28,0.193,29,0.193,30,0.232,37,0.461,69,0.021,70,0.021,87,1.706,91,3.273,92,1.471,116,1.633,168,1.686,175,1.303,180,0.97,183,0.773,187,0.597,191,0.917,192,0.917,194,0.578,203,0.832,213,0.352,258,2.169,367,2.53,369,4.186,373,4.186,374,4.907,375,2.995,376,4.907,378,3.664,379,2.749,380,3.236,381,4.186,384,3.236,385,2.088,396,3.236,404,2.289,608,2.831,645,3.849,646,3.849,647,3.849,648,3.849,649,4.186,650,4.186,651,3.849,652,3.849,653,3.849,654,3.849]],["title/injectables/UserService.html",[92,0.821,213,0.23]],["body/injectables/UserService.html",[2,0.18,3,0.15,7,0.121,17,0.276,18,0.838,20,2.021,21,0.577,22,0.029,25,0.821,27,0.253,28,0.15,29,0.15,30,0.18,37,0.487,66,0.81,69,0.018,70,0.018,92,1.056,139,2.194,160,2.194,161,2.194,168,1.945,180,1.595,182,3.456,183,0.65,187,0.463,191,0.969,192,0.969,194,0.741,195,1.132,203,0.645,213,0.343,238,2.406,400,2.274,459,3.127,463,3.127,649,4.42,655,2.507,656,4.192,657,5.258,658,5.258,659,5.258,660,4.192,661,4.192,662,2.982,663,5.258,664,4.192,665,4.192,666,4.192,667,2.982,668,2.982,669,2.982,670,2.982,671,2.982,672,2.982,673,4.192,674,2.982,675,4.192,676,2.982,677,2.982,678,2.982,679,2.982,680,2.982,681,2.982,682,4.192,683,4.192,684,2.982,685,2.982,686,2.982,687,2.982,688,4.192,689,2.982]],["title/components/ViewComponent.html",[0,0.101,65,0.821]],["body/components/ViewComponent.html",[0,0.172,1,0.68,2,0.163,3,0.136,4,0.914,5,0.914,6,0.914,7,0.109,9,0.85,10,1.989,11,1.956,13,1.229,15,1.229,17,0.25,18,0.781,21,0.407,22,0.029,24,0.85,25,0.647,27,0.335,28,0.136,29,0.136,30,0.163,31,0.68,32,1.322,33,1.322,34,1.322,35,1.174,36,0.914,37,0.465,38,0.914,39,0.68,40,0.914,41,0.68,42,1.142,43,1.322,44,0.631,45,0.85,46,0.85,47,1.229,48,0.914,49,0.68,50,0.914,51,0.631,52,1.322,53,0.68,54,0.85,55,0.789,56,0.68,57,0.914,58,0.68,59,0.914,60,0.68,61,0.914,62,0.68,63,0.789,64,0.914,65,1.267,66,1.245,67,1.553,68,0.914,69,0.017,70,0.017,89,1.365,92,1.267,105,1.606,116,1.146,140,1.345,146,1.345,168,1.702,173,1.775,175,1.322,176,1.946,177,3.857,180,1.444,182,3.016,183,0.606,185,1.365,187,0.419,189,2.503,191,0.72,192,0.72,194,0.454,195,0.912,202,1.987,203,0.584,220,3.857,244,1.465,323,4.217,327,3.857,331,1.606,393,3.284,401,2.728,412,2.119,418,1.606,462,1.606,531,2.874,532,1.987,650,2.271,690,2.271,691,3.906,692,3.906,693,5.027,694,3.906,695,3.906,696,2.701,697,2.701,698,2.701,699,2.701,700,2.701,701,2.701,702,3.906,703,2.701,704,2.701,705,2.701,706,2.701,707,3.906,708,2.701]],["title/injectables/WarningDialogService.html",[93,1.768,213,0.23]],["body/injectables/WarningDialogService.html",[2,0.242,3,0.202,7,0.163,17,0.372,18,1.024,21,0.533,22,0.029,25,0.725,27,0.34,28,0.202,29,0.202,30,0.242,37,0.372,51,0.94,54,1.773,69,0.022,70,0.022,93,2.779,125,1.706,149,3.382,150,3.901,183,0.795,187,0.624,191,0.741,192,0.741,194,0.595,203,0.87,213,0.398,242,1.362,249,3.901,252,2.392,253,4.366,254,3.382,255,4.366,262,3.901,271,2.959,343,4.366,347,3.382,563,3.382,709,3.382,710,5.123,711,4.023,712,4.023,713,4.023,714,4.023,715,4.023,716,4.023,717,4.023]],["title/coverage.html",[718,3.747]],["body/coverage.html",[0,0.199,1,0.809,7,0.13,8,2.698,21,0.334,22,0.029,39,0.809,41,0.809,44,0.75,49,0.809,51,0.75,53,0.809,56,0.809,58,0.809,60,0.809,62,0.809,65,0.809,69,0.019,70,0.019,82,1.741,87,0.938,88,1.361,89,0.871,90,1.741,92,0.809,93,1.741,109,2.899,144,2.361,148,2.361,150,2.109,153,2.361,157,2.393,174,2.698,189,1.598,213,0.44,214,2.698,245,3.313,246,3.313,288,3.245,289,3.245,317,2.698,343,3.245,344,2.698,364,2.698,397,2.302,398,1.741,399,3.383,405,2.393,410,1.741,437,1.741,468,2.698,478,1.741,501,2.698,512,2.109,513,2.698,559,2.698,579,5.685,590,2.698,591,2.698,617,2.899,619,2.361,621,2.361,622,2.698,623,2.698,625,2.698,631,2.698,655,2.698,690,2.698,709,2.698,718,2.698,719,3.209,720,3.209,721,3.209,722,5.427,723,4.411,724,3.209,725,5.69,726,5.04,727,5.427,728,5.04,729,4.411,730,4.411,731,3.209,732,3.209,733,2.698,734,3.245,735,3.708,736,2.698,737,3.209,738,3.209]],["title/interfaces/createRoomResponse.html",[397,1.382,410,1.768]],["body/interfaces/createRoomResponse.html",[0,0.082,2,0.16,3,0.133,7,0.107,17,0.245,18,0.77,20,1.927,21,0.401,22,0.029,24,1.212,27,0.344,28,0.133,29,0.133,30,0.16,35,0.9,37,0.357,69,0.016,70,0.016,87,1.126,89,0.72,92,0.971,116,1.125,168,1.537,180,1.436,181,2.482,185,0.72,194,0.702,203,0.573,213,0.272,216,1.577,223,2.292,228,1.577,229,1.439,230,1.577,231,1.439,232,1.439,233,2.964,237,2.292,238,2.081,240,1.577,242,2.016,244,1.439,250,1.439,251,1.042,258,1.042,281,1.926,303,2.292,375,1.439,379,2.261,385,1.439,397,2.246,398,1.439,399,1.577,400,2.091,401,2.091,402,1.743,403,1.743,404,1.577,405,2.091,406,1.743,407,1.743,408,1.743,409,1.743,410,2.091,411,1.743,412,1.439,413,1.743,414,1.743,415,1.743,416,1.743,417,2.533,418,1.577,419,1.743,420,1.743,421,1.577,422,2.984,423,1.743,424,2.984,425,1.743,426,1.743,427,1.743,428,1.743,429,1.743,430,1.743,431,1.743,432,2.533,433,2.533,434,1.743,435,1.743,436,1.743,437,1.439,438,1.743,439,1.743,440,1.743,441,1.743,442,1.743,443,1.743,444,1.743,445,1.743,446,1.743,447,1.743,448,1.577,449,1.743,450,1.743,451,1.743,452,1.743,453,1.743,454,1.743,455,1.743,456,1.743,457,1.743,458,1.743,459,1.577,460,1.743,461,1.577,462,1.577,463,1.577,464,1.743,465,1.743,466,1.743,467,1.743]],["title/dependencies.html",[73,2.128,739,2.716]],["body/dependencies.html",[22,0.029,28,0.213,63,1.238,69,0.022,70,0.022,73,2.298,100,3.893,101,3.478,105,2.519,114,3.56,125,1.796,160,3.116,161,3.116,231,2.298,232,2.298,269,2.519,378,3.116,740,4.235,741,4.235,742,4.235,743,5.292,744,6.511,745,4.235,746,4.235,747,4.235,748,4.235,749,4.235,750,4.235,751,4.235,752,4.235,753,4.235,754,4.235,755,4.235,756,4.235,757,4.235,758,4.235,759,4.235,760,4.235,761,4.235,762,4.235,763,4.235,764,4.235,765,4.235,766,4.235,767,4.235,768,4.235,769,4.235,770,4.235]],["title/index.html",[17,0.251,771,2.716,772,2.716]],["body/index.html",[0,0.176,3,0.205,7,0.165,11,1.281,22,0.022,37,0.377,69,0.022,70,0.022,96,2.423,117,4.767,258,1.601,342,4.767,437,2.21,773,4.074,774,5.164,775,5.962,776,5.67,777,4.074,778,4.074,779,4.074,780,5.164,781,6.385,782,6.385,783,4.074,784,4.074,785,4.074,786,4.074,787,4.074,788,4.074,789,4.074,790,4.074,791,4.074,792,6.152,793,4.074,794,4.074,795,4.074,796,4.074,797,4.074,798,4.074,799,3.425,800,5.164,801,6.152,802,5.164,803,5.164,804,4.074,805,5.962,806,4.074,807,4.074,808,4.074,809,5.67,810,4.074,811,4.074,812,4.074,813,4.074]],["title/modules.html",[71,1.891]],["body/modules.html",[22,0.025,69,0.025,70,0.025,71,2.141,72,3.318,84,3.002,85,3.002,101,4.094,814,6.228,815,6.228,816,6.228]],["title/overview.html",[55,1.303]],["body/overview.html",[0,0.097,1,1.506,22,0.029,29,0.157,31,0.787,39,1.251,41,1.251,44,1.16,49,1.251,51,1.16,53,1.251,55,0.912,56,1.251,58,1.251,60,1.251,62,1.251,65,1.506,69,0.018,70,0.018,71,1.836,72,4.509,73,1.694,74,2.052,75,2.052,76,2.052,77,2.624,78,2.624,79,2.624,80,2.624,81,2.624,82,2.695,83,4.176,84,3.848,85,3.554,86,3.265,87,1.452,88,2.107,89,1.456,90,2.695,91,3.265,92,1.351,93,2.695,94,2.845,95,2.052,96,1.856,189,2.473,213,0.221,397,1.324,478,2.695,512,2.052,551,2.624,552,2.624,553,2.624,554,2.624,614,2.624,615,2.624,616,2.624,817,3.122,818,3.122,819,3.122,820,3.122,821,3.122]],["title/miscellaneous/variables.html",[734,2.885,822,2.284]],["body/miscellaneous/variables.html",[17,0.441,21,0.592,22,0.029,23,3.085,24,1.789,69,0.024,70,0.024,173,3.131,331,2.833,448,3.744,733,4.005,734,3.505,735,5.489,736,4.005,799,4.78,822,4.005,823,4.764,824,4.764]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":579,"title":{},"body":{"components/RoomsComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":820,"title":{},"body":{"overview.html":{}}}],["1.18.2",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["1.4.32",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["1.7.3",{"_index":778,"title":{},"body":{"index.html":{}}}],["12",{"_index":818,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["2.86.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":817,"title":{},"body":{"overview.html":{}}}],["3.0.4",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":312,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["4",{"_index":821,"title":{},"body":{"overview.html":{}}}],["4.16.3",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["5.2.9",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":304,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["9",{"_index":819,"title":{},"body":{"overview.html":{}}}],["_localstservic",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["_socket",{"_index":237,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["_socket.on('newroom",{"_index":430,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["_socket.on('roommessag",{"_index":241,"title":{},"body":{"injectables/ChatService.html":{}}}],["actual_compon",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["add",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["addroom",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["addroom(id",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["alreadi",{"_index":341,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["angular",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/anim",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":269,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["angular/compil",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{}}}],["angular/core/src/metadata/direct",{"_index":403,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["angular/form",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/WarningDialogService.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{}}}],["angular/material/checkbox",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{}}}],["angular/material/menu",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/CreateUserComponent.html":{},"injectables/NavigationService.html":{},"components/ViewComponent.html":{},"dependencies.html":{}}}],["api",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["api.modul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["api.module.t",{"_index":618,"title":{},"body":{"modules/SpotifyApiModule.html":{}}}],["api.service.t",{"_index":623,"title":{},"body":{"injectables/SpotifyApiService.html":{},"coverage.html":{}}}],["api.service.ts:4",{"_index":624,"title":{},"body":{"injectables/SpotifyApiService.html":{}}}],["api/spotifi",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{},"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"coverage.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["app.compon",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":72,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["arg",{"_index":517,"title":{},"body":{"pipes/PipePipe.html":{}}}],["array",{"_index":409,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["artifact",{"_index":793,"title":{},"body":{"index.html":{}}}],["async",{"_index":286,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["author",{"_index":608,"title":{},"body":{"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{}}}],["authorize(userid",{"_index":636,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["automat",{"_index":786,"title":{},"body":{"index.html":{}}}],["bar",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["bar.css",{"_index":290,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["bearer",{"_index":653,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bodi",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":327,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ViewComponent.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["brows",{"_index":816,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":792,"title":{},"body":{"index.html":{}}}],["callback",{"_index":433,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["cb",{"_index":432,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["chang",{"_index":788,"title":{},"body":{"index.html":{}}}],["chat",{"_index":177,"title":{},"body":{"components/ChatComponent.html":{},"components/ViewComponent.html":{}}}],["chat'},{'nam",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["chat.component.css",{"_index":178,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.html",{"_index":179,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.servic",{"_index":202,"title":{},"body":{"components/ChatComponent.html":{},"modules/RoomModule.html":{},"components/ViewComponent.html":{}}}],["chat/chat.compon",{"_index":558,"title":{},"body":{"modules/RoomModule.html":{}}}],["chatcompon",{"_index":39,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservic",{"_index":189,"title":{"injectables/ChatService.html":{}},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"modules/RoomModule.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":812,"title":{},"body":{"index.html":{}}}],["checkus",{"_index":466,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["class",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["cli",{"_index":776,"title":{},"body":{"index.html":{}}}],["client",{"_index":232,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{}}}],["cluster_appmodul",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_roommodul",{"_index":551,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_declar",{"_index":552,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_export",{"_index":553,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_provid",{"_index":554,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_spotifyapimodul",{"_index":614,"title":{},"body":{"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["cluster_spotifyapimodule_declar",{"_index":615,"title":{},"body":{"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["cluster_spotifyapimodule_provid",{"_index":616,"title":{},"body":{"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["code",{"_index":789,"title":{},"body":{"index.html":{}}}],["color",{"_index":292,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["commonmodul",{"_index":556,"title":{},"body":{"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"index.html":{},"overview.html":{}}}],["component'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["component.compon",{"_index":620,"title":{},"body":{"modules/SpotifyApiModule.html":{}}}],["component.component.css",{"_index":626,"title":{},"body":{"components/SpotifyComponentComponent.html":{}}}],["component.component.html",{"_index":627,"title":{},"body":{"components/SpotifyComponentComponent.html":{}}}],["component.component.t",{"_index":625,"title":{},"body":{"components/SpotifyComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:12",{"_index":629,"title":{},"body":{"components/SpotifyComponentComponent.html":{}}}],["component.component.ts:8",{"_index":628,"title":{},"body":{"components/SpotifyComponentComponent.html":{}}}],["component.html",{"_index":291,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["component/dialog/dialog.compon",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/WarningDialogService.html":{}}}],["component/dialog/dialog.component.t",{"_index":344,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["component/dialog/dialog.component.ts:11",{"_index":353,"title":{},"body":{"components/DialogComponent.html":{}}}],["component/dialog/dialog.component.ts:12",{"_index":352,"title":{},"body":{"components/DialogComponent.html":{}}}],["component/dialog/dialog.component.ts:14",{"_index":350,"title":{},"body":{"components/DialogComponent.html":{}}}],["component/dialog/dialog.component.ts:18",{"_index":351,"title":{},"body":{"components/DialogComponent.html":{}}}],["component/dialog/dialog.component.ts:8",{"_index":349,"title":{},"body":{"components/DialogComponent.html":{}}}],["component/spotifi",{"_index":619,"title":{},"body":{"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"coverage.html":{}}}],["component_templ",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["components/cr",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["components/gam",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["components/menu/menu.compon",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rooms/rooms.compon",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":562,"title":{},"body":{"components/RoomsComponent.html":{},"injectables/SpotifyRestService.html":{}}}],["connect",{"_index":427,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["connect(chat_url",{"_index":604,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["connect(url",{"_index":423,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["connectchat",{"_index":184,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["connectchat(roomid",{"_index":221,"title":{},"body":{"injectables/ChatService.html":{}}}],["connectio",{"_index":429,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["connectsocket",{"_index":215,"title":{},"body":{"injectables/ChatService.html":{}}}],["connectuserw",{"_index":528,"title":{},"body":{"injectables/RestApiService.html":{}}}],["connectuserws(id",{"_index":431,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["console.error(err",{"_index":708,"title":{},"body":{"components/ViewComponent.html":{}}}],["console.error(error",{"_index":339,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["console.log(\"successfulli",{"_index":426,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["console.log('error",{"_index":575,"title":{},"body":{"components/RoomsComponent.html":{}}}],["console.log('opendialog",{"_index":712,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["console.log('roomid",{"_index":235,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log('us",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(data",{"_index":418,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["console.log(err",{"_index":703,"title":{},"body":{"components/ViewComponent.html":{}}}],["console.log(messag",{"_index":206,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log(msg",{"_index":208,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log(result",{"_index":278,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["console.log(this.chat.getchatsocket",{"_index":204,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log(this.data",{"_index":314,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["console.log(this.socket.emit('setuserw",{"_index":434,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["console.log(valu",{"_index":585,"title":{},"body":{"components/RoomsComponent.html":{}}}],["const",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor",{"_index":187,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["constructor(_localstservic",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(chat",{"_index":188,"title":{},"body":{"components/ChatComponent.html":{}}}],["constructor(data",{"_index":294,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["constructor(dialog",{"_index":254,"title":{},"body":{"components/CreateRoomComponent.html":{},"injectables/WarningDialogService.html":{}}}],["constructor(dialogref",{"_index":348,"title":{},"body":{"components/DialogComponent.html":{},"components/DialogRoomForm.html":{}}}],["constructor(http",{"_index":532,"title":{},"body":{"injectables/RestApiService.html":{},"injectables/SpotifyRestService.html":{},"components/ViewComponent.html":{}}}],["constructor(iconregistri",{"_index":474,"title":{},"body":{"components/MenuComponent.html":{}}}],["constructor(matsnack",{"_index":524,"title":{},"body":{"injectables/ResponseSnackbarService.html":{}}}],["constructor(navig",{"_index":370,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["constructor(priv",{"_index":203,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/NavigationService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["constructor(publ",{"_index":307,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["constructor(rest",{"_index":322,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["constructor(restapi",{"_index":218,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(roomservic",{"_index":564,"title":{},"body":{"components/RoomsComponent.html":{}}}],["constructor(rout",{"_index":504,"title":{},"body":{"injectables/NavigationService.html":{}}}],["constructor(us",{"_index":646,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["constructor(wsservic",{"_index":595,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["core",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":718,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["create(url",{"_index":435,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["createroom",{"_index":529,"title":{},"body":{"injectables/RestApiService.html":{}}}],["createroom(data",{"_index":455,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["createroomcompon",{"_index":41,"title":{"components/CreateRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createroomrespons",{"_index":410,"title":{"interfaces/createRoomResponse.html":{}},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{}}}],["createroomrout",{"_index":411,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["createsnackbar",{"_index":44,"title":{"components/CreateSnackBar.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createus",{"_index":530,"title":{},"body":{"injectables/RestApiService.html":{}}}],["createuser(nam",{"_index":457,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["createusercompon",{"_index":49,"title":{"components/CreateUserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["create{{respons",{"_index":287,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["data",{"_index":242,"title":{},"body":{"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["data.author",{"_index":609,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["data.declin",{"_index":356,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.decline}}{{data.submit",{"_index":358,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.foreach(el",{"_index":573,"title":{},"body":{"components/RoomsComponent.html":{}}}],["data.messag",{"_index":316,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/RoomsServiceService.html":{}}}],["data.room",{"_index":419,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["data.statu",{"_index":315,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["data.submit",{"_index":357,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.text",{"_index":355,"title":{},"body":{"components/DialogComponent.html":{}}}],["declar",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["declin",{"_index":347,"title":{},"body":{"components/DialogComponent.html":{},"injectables/WarningDialogService.html":{}}}],["decor",{"_index":299,"title":{},"body":{"components/CreateSnackBar.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/RoomsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["delet",{"_index":580,"title":{},"body":{"components/RoomsComponent.html":{}}}],["depend",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":784,"title":{},"body":{"index.html":{}}}],["develop",{"_index":779,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["dialog'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["dialog.component.css",{"_index":345,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.html",{"_index":346,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.html",{"_index":280,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["dialog.servic",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{}}}],["dialog.service.t",{"_index":709,"title":{},"body":{"injectables/WarningDialogService.html":{},"coverage.html":{}}}],["dialog.service.ts:10",{"_index":711,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["dialog.service.ts:6",{"_index":710,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["dialog/dialog",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/DialogComponent.html":{},"coverage.html":{}}}],["dialog/warn",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{}}}],["dialogcompon",{"_index":51,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":249,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["dialogroomform",{"_index":53,"title":{"components/DialogRoomForm.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialpad",{"_index":496,"title":{},"body":{"components/MenuComponent.html":{}}}],["direct",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":791,"title":{},"body":{"index.html":{}}}],["directori",{"_index":796,"title":{},"body":{"index.html":{}}}],["dist",{"_index":795,"title":{},"body":{"index.html":{}}}],["document",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["document.body.webkitrequestfullscreen",{"_index":490,"title":{},"body":{"components/MenuComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["domsanit",{"_index":477,"title":{},"body":{"components/MenuComponent.html":{}}}],["dont",{"_index":716,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["durat",{"_index":311,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["dynam",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":806,"title":{},"body":{"index.html":{}}}],["element",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["end",{"_index":805,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":393,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"components/ViewComponent.html":{}}}],["err.statu",{"_index":394,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["error",{"_index":320,"title":{},"body":{"components/CreateUserComponent.html":{},"components/RoomsComponent.html":{}}}],["event",{"_index":389,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["exampl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["execut",{"_index":802,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["express",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["extend",{"_index":408,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["fals",{"_index":331,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"index.html":{}}}],["flag",{"_index":798,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["fullscreen",{"_index":497,"title":{},"body":{"components/MenuComponent.html":{}}}],["fullscreenapp",{"_index":472,"title":{},"body":{"components/MenuComponent.html":{}}}],["function",{"_index":266,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["further",{"_index":808,"title":{},"body":{"index.html":{}}}],["game",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["gameroomcompon",{"_index":56,"title":{"components/GameRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gener",{"_index":775,"title":{},"body":{"index.html":{}}}],["get",{"_index":771,"title":{"index.html":{}},"body":{}}],["getallroom",{"_index":593,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["getchatsocket",{"_index":217,"title":{},"body":{"injectables/ChatService.html":{}}}],["getcurrentroomsw",{"_index":594,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["getid",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["getnam",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["getroom",{"_index":459,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/UserService.html":{},"interfaces/createRoomResponse.html":{}}}],["getsocket",{"_index":467,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["gettoken",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["getus",{"_index":463,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/UserService.html":{},"interfaces/createRoomResponse.html":{}}}],["go",{"_index":811,"title":{},"body":{"index.html":{}}}],["groupform",{"_index":321,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["guess",{"_index":500,"title":{},"body":{"components/MenuComponent.html":{}}}],["help",{"_index":809,"title":{},"body":{"index.html":{}}}],["host",{"_index":499,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["http",{"_index":412,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/SpotifyRestService.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["http://192.168.178.61:8000/api/createroom",{"_index":454,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["http://192.168.178.61:8000/api/spotify/auth",{"_index":492,"title":{},"body":{"components/MenuComponent.html":{}}}],["http://localhost:4200",{"_index":785,"title":{},"body":{"index.html":{}}}],["http_interceptor",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":401,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/SpotifyRestService.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["httpclientmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":383,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["httpevent",{"_index":380,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":376,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheader",{"_index":698,"title":{},"body":{"components/ViewComponent.html":{}}}],["httpinterceptor",{"_index":381,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpparam",{"_index":402,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["httprequest",{"_index":374,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["httprespons",{"_index":382,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["httpresponsehandl",{"_index":86,"title":{"interceptors/HttpResponseHandling.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpResponseHandling.html":{},"overview.html":{}}}],["icon.svg",{"_index":489,"title":{},"body":{"components/MenuComponent.html":{}}}],["iconregistri",{"_index":480,"title":{},"body":{"components/MenuComponent.html":{}}}],["iconregistry.addsvgicon",{"_index":485,"title":{},"body":{"components/MenuComponent.html":{}}}],["id",{"_index":238,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/NavigationService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"injectables/UserService.html":{},"interfaces/createRoomResponse.html":{}}}],["identifi",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["if(result",{"_index":276,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["implement",{"_index":175,"title":{},"body":{"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"pipes/PipePipe.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/ViewComponent.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["indetermin",{"_index":301,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["inject",{"_index":213,"title":{"injectables/ChatService.html":{},"injectables/NavigationService.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyApiService.html":{},"injectables/SpotifyRestService.html":{},"injectables/UserService.html":{},"injectables/WarningDialogService.html":{}},"body":{"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/NavigationService.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyApiService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":282,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{}}}],["inject(mat_snack_bar_data",{"_index":313,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["intercept",{"_index":369,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":373,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":367,"title":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["interfac",{"_index":397,"title":{"interfaces/JoinRoomResponse.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["io",{"_index":230,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["io.connect(\"http://192.168.178.61:8000",{"_index":413,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["join",{"_index":563,"title":{},"body":{"components/RoomsComponent.html":{},"injectables/WarningDialogService.html":{}}}],["join(id",{"_index":568,"title":{},"body":{"components/RoomsComponent.html":{}}}],["joinroom",{"_index":531,"title":{},"body":{"injectables/RestApiService.html":{},"injectables/RoomsServiceService.html":{},"components/ViewComponent.html":{}}}],["joinroom(id",{"_index":461,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"interfaces/createRoomResponse.html":{}}}],["joinroom(roomid",{"_index":695,"title":{},"body":{"components/ViewComponent.html":{}}}],["joinroomrespons",{"_index":398,"title":{"interfaces/JoinRoomResponse.html":{}},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{}}}],["js",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":400,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/UserService.html":{},"interfaces/createRoomResponse.html":{}}}],["json.parse(response.data",{"_index":607,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["karma",{"_index":804,"title":{},"body":{"index.html":{}}}],["key",{"_index":514,"title":{},"body":{"pipes/PipePipe.html":{}}}],["key.value.nam",{"_index":588,"title":{},"body":{"components/RoomsComponent.html":{}}}],["key.value.numberuser}}/{{key.value.max",{"_index":589,"title":{},"body":{"components/RoomsComponent.html":{}}}],["keys.push",{"_index":521,"title":{},"body":{"pipes/PipePipe.html":{}}}],["leaveroom",{"_index":465,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["legend",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"overview.html":{}}}],["localstorageservic",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["map((respons",{"_index":605,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["mat_dialog_data",{"_index":270,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{}}}],["mat_snack_bar_data",{"_index":305,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["matbuttonmodul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{}}}],["match",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":255,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["matdialogmodul",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":262,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["materi",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonregistri",{"_index":475,"title":{},"body":{"components/MenuComponent.html":{}}}],["matinputmodul",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{}}}],["matmenumodul",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnack",{"_index":308,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["matsnackbar",{"_index":306,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["matsnackbarmodul",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":407,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["menu",{"_index":469,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'nam",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["menu.component.css",{"_index":470,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":471,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucompon",{"_index":58,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messag",{"_index":181,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"interfaces/createRoomResponse.html":{}}}],["message.messag",{"_index":211,"title":{},"body":{"components/ChatComponent.html":{}}}],["message.nam",{"_index":210,"title":{},"body":{"components/ChatComponent.html":{}}}],["messageev",{"_index":606,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"pipes/PipePipe.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["method",{"_index":183,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["miscellan",{"_index":822,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":293,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["modul",{"_index":71,"title":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/room/room.modul",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/spotifi",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/MenuComponent.html":{}}}],["mongodb",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":810,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":495,"title":{},"body":{"components/MenuComponent.html":{}}}],["msg",{"_index":199,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["multi",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{},"index.html":{}}}],["navig",{"_index":258,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/createRoomResponse.html":{},"index.html":{}}}],["navigation.servic",{"_index":385,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/createRoomResponse.html":{}}}],["navigationservic",{"_index":87,"title":{"injectables/NavigationService.html":{}},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/NavigationService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["new",{"_index":437,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"index.html":{}}}],["next",{"_index":375,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/createRoomResponse.html":{}}}],["next.handle(request",{"_index":654,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request).do((ev",{"_index":388,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["ng",{"_index":782,"title":{},"body":{"index.html":{}}}],["ng2webstorag",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngif",{"_index":268,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["ngmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["ngx",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nicht",{"_index":715,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["node",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":336,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"components/CreateSnackBar.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["numberus",{"_index":406,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ob",{"_index":440,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["object",{"_index":448,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{},"miscellaneous/variables.html":{}}}],["obs.complete.bind(ob",{"_index":446,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["obs.error.bind(ob",{"_index":444,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["obs.next.bind(ob",{"_index":442,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["observ",{"_index":379,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/createRoomResponse.html":{}}}],["oninit",{"_index":176,"title":{},"body":{"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["onnoclick",{"_index":283,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["opendialog",{"_index":253,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["opensnackbar",{"_index":523,"title":{},"body":{"injectables/ResponseSnackbarService.html":{}}}],["opensnackbar(respons",{"_index":309,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["option",{"_index":192,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":55,"title":{"overview.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"overview.html":{}}}],["packag",{"_index":739,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":644,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["paramet",{"_index":191,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{}}}],["parser",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["partygam",{"_index":498,"title":{},"body":{"components/MenuComponent.html":{}}}],["password",{"_index":250,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["path",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["paus",{"_index":632,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["pipe",{"_index":512,"title":{"pipes/PipePipe.html":{}},"body":{"pipes/PipePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipepip",{"_index":82,"title":{"pipes/PipePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/PipePipe.html":{},"components/RoomsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/pipe.pip",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{}}}],["pipetransform",{"_index":519,"title":{},"body":{"pipes/PipePipe.html":{}}}],["playsong",{"_index":633,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["playsong(id",{"_index":640,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["primari",{"_index":297,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["privat",{"_index":180,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["prod",{"_index":797,"title":{},"body":{"index.html":{}}}],["product",{"_index":799,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":774,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["protractor",{"_index":807,"title":{},"body":{"index.html":{}}}],["provid",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["public",{"_index":281,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["pure",{"_index":520,"title":{},"body":{"pipes/PipePipe.html":{}}}],["readm",{"_index":813,"title":{},"body":{"index.html":{}}}],["reload",{"_index":787,"title":{},"body":{"index.html":{}}}],["replaceurl",{"_index":338,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/NavigationService.html":{}}}],["request",{"_index":378,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{}}}],["request.clon",{"_index":651,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"overview.html":{}}}],["respons",{"_index":251,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["responsesnackbar",{"_index":257,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["responsesnackbarservic",{"_index":88,"title":{"injectables/ResponseSnackbarService.html":{}},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"injectables/ResponseSnackbarService.html":{},"coverage.html":{},"overview.html":{}}}],["responsesnackbarservice/respons",{"_index":387,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["rest",{"_index":256,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{}}}],["rest.servic",{"_index":484,"title":{},"body":{"components/MenuComponent.html":{},"modules/SpotifyApiModule.html":{}}}],["rest.service.t",{"_index":631,"title":{},"body":{"injectables/SpotifyRestService.html":{},"coverage.html":{}}}],["rest.service.ts:16",{"_index":637,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["rest.service.ts:24",{"_index":641,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["rest.service.ts:28",{"_index":639,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["rest.service.ts:32",{"_index":642,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["rest.service.ts:9",{"_index":635,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["restapi",{"_index":220,"title":{},"body":{"injectables/ChatService.html":{},"components/ViewComponent.html":{}}}],["restapi.servic",{"_index":601,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["restapiservic",{"_index":89,"title":{"injectables/RestApiService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"components/ViewComponent.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["result",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resum",{"_index":634,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["return",{"_index":194,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{}}}],["room",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{}}}],["room'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["room.compon",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["room.component.css",{"_index":247,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{}}}],["room.component.html",{"_index":248,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{}}}],["room.component.t",{"_index":246,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:12",{"_index":366,"title":{},"body":{"components/GameRoomComponent.html":{}}}],["room.component.ts:13",{"_index":263,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:15",{"_index":265,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:16",{"_index":264,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:17",{"_index":259,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:21",{"_index":260,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:24",{"_index":261,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:43",{"_index":267,"title":{},"body":{"components/CreateRoomComponent.html":{}}}],["room.component.ts:53",{"_index":359,"title":{},"body":{"components/DialogRoomForm.html":{}}}],["room.component.ts:55",{"_index":363,"title":{},"body":{"components/DialogRoomForm.html":{}}}],["room.component.ts:56",{"_index":362,"title":{},"body":{"components/DialogRoomForm.html":{}}}],["room.component.ts:58",{"_index":360,"title":{},"body":{"components/DialogRoomForm.html":{}}}],["room.component.ts:62",{"_index":361,"title":{},"body":{"components/DialogRoomForm.html":{}}}],["room.component.ts:8",{"_index":365,"title":{},"body":{"components/GameRoomComponent.html":{}}}],["room/:id",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["room/creat",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"coverage.html":{}}}],["room/gam",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/GameRoomComponent.html":{},"coverage.html":{}}}],["roomconnect",{"_index":693,"title":{},"body":{"components/ViewComponent.html":{}}}],["roomev",{"_index":592,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["roomevent:ani",{"_index":602,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["roomid",{"_index":182,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{}}}],["roommodul",{"_index":84,"title":{"modules/RoomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules.html":{},"overview.html":{}}}],["rooms'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["rooms.component.css",{"_index":560,"title":{},"body":{"components/RoomsComponent.html":{}}}],["rooms.component.html",{"_index":561,"title":{},"body":{"components/RoomsComponent.html":{}}}],["roomscompon",{"_index":60,"title":{"components/RoomsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["roomservic",{"_index":567,"title":{},"body":{"components/RoomsComponent.html":{}}}],["roomsrespons",{"_index":405,"title":{"interfaces/RoomsResponse.html":{}},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{}}}],["roomsserviceservic",{"_index":90,"title":{"injectables/RoomsServiceService.html":{}},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{},"injectables/RoomsServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["rout",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":323,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/NavigationService.html":{},"components/ViewComponent.html":{}}}],["router:rout",{"_index":510,"title":{},"body":{"injectables/NavigationService.html":{}}}],["routermodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":781,"title":{},"body":{"index.html":{}}}],["rx",{"_index":228,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rx.observ",{"_index":223,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rx.observable.cr",{"_index":439,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rx.observable.fromeventpattern(data",{"_index":240,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rx.subject",{"_index":422,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rx.subject.create(observ",{"_index":452,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["rxj",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/do",{"_index":386,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["rxjs/observ",{"_index":384,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["rxjs/rx",{"_index":229,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"interfaces/createRoomResponse.html":{}}}],["sanit",{"_index":476,"title":{},"body":{"components/MenuComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/img/examples/thumbup",{"_index":488,"title":{},"body":{"components/MenuComponent.html":{}}}],["scaffold",{"_index":790,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["send",{"_index":212,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessag",{"_index":186,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["sendmessage(msg",{"_index":197,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["serv",{"_index":783,"title":{},"body":{"index.html":{}}}],["server",{"_index":780,"title":{},"body":{"index.html":{}}}],["servic",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"injectables/UserService.html":{}}}],["service.servic",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{}}}],["service.service.t",{"_index":591,"title":{},"body":{"injectables/RoomsServiceService.html":{},"coverage.html":{}}}],["service.service.ts:26",{"_index":598,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["service.service.ts:30",{"_index":599,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["service.service.ts:34",{"_index":600,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["service.service.ts:9",{"_index":596,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["service/auth/httpresponsehandl",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["service/auth/token.interceptor",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["service/navigation.servic",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"components/RoomsComponent.html":{}}}],["service/responsesnackbarservice/respons",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["service/restapi.servic",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"modules/RoomModule.html":{},"components/ViewComponent.html":{}}}],["service/roomsservice/room",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{}}}],["service/user.servic",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/CreateUserComponent.html":{},"components/MenuComponent.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"components/ViewComponent.html":{}}}],["service/warn",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{}}}],["sethead",{"_index":652,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["setid",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["setid(id",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["setus",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(us",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["snack",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["snack'},{'nam",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["snackbar",{"_index":371,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["snackbar.servic",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{}}}],["snackbar.service.t",{"_index":289,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{},"coverage.html":{}}}],["snackbar.service.ts:26",{"_index":298,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["snackbar.service.ts:27",{"_index":302,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["snackbar.service.ts:28",{"_index":295,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["snackbar.service.ts:30",{"_index":300,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["snackbar.service.ts:31",{"_index":296,"title":{},"body":{"components/CreateSnackBar.html":{}}}],["snackbar.service.ts:6",{"_index":525,"title":{},"body":{"injectables/ResponseSnackbarService.html":{}}}],["snackbar.service.ts:8",{"_index":527,"title":{},"body":{"injectables/ResponseSnackbarService.html":{}}}],["snackbar.service.ts:9",{"_index":526,"title":{},"body":{"injectables/ResponseSnackbarService.html":{}}}],["socket",{"_index":216,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["socket.io",{"_index":231,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyApiService.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"interfaces/createRoomResponse.html":{},"index.html":{}}}],["spotifi",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"dependencies.html":{}}}],["spotifyapimodul",{"_index":85,"title":{"modules/SpotifyApiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpotifyApiModule.html":{},"modules.html":{},"overview.html":{}}}],["spotifyapiservic",{"_index":621,"title":{"injectables/SpotifyApiService.html":{}},"body":{"injectables/SpotifyApiService.html":{},"coverage.html":{}}}],["spotifyauth",{"_index":473,"title":{},"body":{"components/MenuComponent.html":{}}}],["spotifycomponentcompon",{"_index":62,"title":{"components/SpotifyComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spotifyguessgam",{"_index":773,"title":{},"body":{"index.html":{}}}],["spotifyrestservic",{"_index":478,"title":{"injectables/SpotifyRestService.html":{}},"body":{"components/MenuComponent.html":{},"modules/SpotifyApiModule.html":{},"injectables/SpotifyRestService.html":{},"coverage.html":{},"overview.html":{}}}],["src/.../environment.prod.t",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/cr",{"_index":245,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"coverage.html":{}}}],["src/app/components/gam",{"_index":364,"title":{},"body":{"components/GameRoomComponent.html":{},"coverage.html":{}}}],["src/app/components/menu/menu.component.t",{"_index":468,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/components/menu/menu.component.ts:12",{"_index":479,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:20",{"_index":482,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:23",{"_index":481,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:27",{"_index":483,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/rooms/rooms.component.t",{"_index":559,"title":{},"body":{"components/RoomsComponent.html":{},"coverage.html":{}}}],["src/app/components/rooms/rooms.component.ts:15",{"_index":571,"title":{},"body":{"components/RoomsComponent.html":{}}}],["src/app/components/rooms/rooms.component.ts:16",{"_index":566,"title":{},"body":{"components/RoomsComponent.html":{}}}],["src/app/components/rooms/rooms.component.ts:23",{"_index":570,"title":{},"body":{"components/RoomsComponent.html":{}}}],["src/app/components/rooms/rooms.component.ts:47",{"_index":569,"title":{},"body":{"components/RoomsComponent.html":{}}}],["src/app/modules/room/chat.service.t",{"_index":214,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/modules/room/chat.service.ts:10",{"_index":227,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat.service.ts:11",{"_index":226,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat.service.ts:12",{"_index":219,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat.service.ts:17",{"_index":222,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat.service.ts:29",{"_index":224,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat.service.ts:33",{"_index":225,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/modules/room/chat/chat.component.t",{"_index":174,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/modules/room/chat/chat.component.ts:10",{"_index":201,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/chat/chat.component.ts:11",{"_index":200,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/chat/chat.component.ts:12",{"_index":190,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/chat/chat.component.ts:15",{"_index":196,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/chat/chat.component.ts:24",{"_index":193,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/chat/chat.component.ts:28",{"_index":198,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/modules/room/room.module.t",{"_index":555,"title":{},"body":{"modules/RoomModule.html":{}}}],["src/app/modules/room/spotifi",{"_index":622,"title":{},"body":{"injectables/SpotifyApiService.html":{},"coverage.html":{}}}],["src/app/modules/room/view/view.component.t",{"_index":690,"title":{},"body":{"components/ViewComponent.html":{},"coverage.html":{}}}],["src/app/modules/room/view/view.component.ts:14",{"_index":694,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/modules/room/view/view.component.ts:34",{"_index":697,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/modules/room/view/view.component.ts:38",{"_index":696,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/modules/spotifi",{"_index":617,"title":{},"body":{"modules/SpotifyApiModule.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"coverage.html":{}}}],["src/app/pipes/pipe.pipe.t",{"_index":513,"title":{},"body":{"pipes/PipePipe.html":{},"coverage.html":{}}}],["src/app/pipes/pipe.pipe.ts:9",{"_index":518,"title":{},"body":{"pipes/PipePipe.html":{}}}],["src/app/service/auth/httpresponsehandling.t",{"_index":368,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["src/app/service/auth/httpresponsehandling.ts:11",{"_index":377,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["src/app/service/auth/httpresponsehandling.ts:9",{"_index":372,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["src/app/service/auth/token.interceptor.t",{"_index":645,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/service/auth/token.interceptor.ts:11",{"_index":648,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/service/auth/token.interceptor.ts:8",{"_index":647,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/service/navigation.service.t",{"_index":501,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/service/navigation.service.ts:13",{"_index":509,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/service/navigation.service.ts:17",{"_index":508,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/service/navigation.service.ts:5",{"_index":505,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/service/navigation.service.ts:9",{"_index":506,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/service/responsesnackbarservice/respons",{"_index":288,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{},"coverage.html":{}}}],["src/app/service/restapi.service.t",{"_index":399,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{}}}],["src/app/service/restapi.service.ts:115",{"_index":546,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:119",{"_index":539,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:124",{"_index":540,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:128",{"_index":541,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:132",{"_index":544,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:136",{"_index":543,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:142",{"_index":545,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:146",{"_index":534,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:150",{"_index":542,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:33",{"_index":548,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:34",{"_index":547,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:35",{"_index":549,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:36",{"_index":533,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:63",{"_index":550,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:65",{"_index":535,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:73",{"_index":536,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:84",{"_index":537,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/restapi.service.ts:95",{"_index":538,"title":{},"body":{"injectables/RestApiService.html":{}}}],["src/app/service/roomsservice/room",{"_index":590,"title":{},"body":{"injectables/RoomsServiceService.html":{},"coverage.html":{}}}],["src/app/service/user.service.t",{"_index":655,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/user.service.ts:12",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:16",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:20",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:27",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:31",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:35",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:40",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:44",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:6",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:7",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:8",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:9",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/warn",{"_index":343,"title":{},"body":{"components/DialogComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":772,"title":{"index.html":{}},"body":{}}],["statement",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":794,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{},"interfaces/JoinRoomResponse.html":{},"pipes/PipePipe.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/UserService.html":{},"interfaces/createRoomResponse.html":{}}}],["stuff",{"_index":391,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["subject",{"_index":421,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"interfaces/createRoomResponse.html":{}}}],["submit",{"_index":252,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["subscrib",{"_index":333,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["subscribe(data",{"_index":705,"title":{},"body":{"components/ViewComponent.html":{}}}],["support",{"_index":814,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":815,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/ResponseSnackbarService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["test",{"_index":801,"title":{},"body":{"index.html":{}}}],["text",{"_index":714,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["this._localstservice.retrieve('token",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["this._localstservice.store('token",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["this.chat.connectchat(data.room",{"_index":706,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.chat.getchatsocket().subscribe(messag",{"_index":205,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chat.sendmessage(msg",{"_index":209,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.connectsocket",{"_index":239,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.connectuserws(this.user.gettoken",{"_index":416,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.create(url",{"_index":425,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.createroomrout",{"_index":453,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.dialog.open(dialogcompon",{"_index":713,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["this.dialog.open(dialogroomform",{"_index":272,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.dialogref",{"_index":271,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{},"injectables/WarningDialogService.html":{}}}],["this.dialogref.afterclos",{"_index":717,"title":{},"body":{"injectables/WarningDialogService.html":{}}}],["this.dialogref.afterclosed().subscribe(result",{"_index":275,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.dialogref.clos",{"_index":284,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.dialogref.close(this.data",{"_index":285,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.dialogref.close(tru",{"_index":354,"title":{},"body":{"components/DialogComponent.html":{}}}],["this.error",{"_index":330,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.getuser().subscribe(data",{"_index":414,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.http.get('http://192.168.178.61:8000/api/room",{"_index":460,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.http.get('http://192.168.178.61:8000/api/spotifyauth",{"_index":643,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["this.http.get('http://192.168.178.61:8000/api/us",{"_index":464,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.http.post('http://192.168.178.61:8000/api/createroom",{"_index":456,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.http.post('http://192.168.178.61:8000/api/createus",{"_index":458,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.http.post('http://192.168.178.61:8000/api/joinroom",{"_index":462,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["this.id",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["this.joinroom(roomid",{"_index":702,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.matsnack.openfromcomponent(createsnackbar",{"_index":310,"title":{},"body":{"components/CreateSnackBar.html":{},"injectables/ResponseSnackbarService.html":{}}}],["this.messag",{"_index":603,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["this.messages.push(messag",{"_index":207,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.nam",{"_index":273,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/CreateUserComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.navigate.viewroom",{"_index":420,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.navigate.viewroom(data.room",{"_index":417,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.navigation.viewcreateus",{"_index":396,"title":{},"body":{"interceptors/HttpResponseHandling.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.navigation.viewroom(result.data",{"_index":279,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.navigation.viewroom(value.id",{"_index":587,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.password",{"_index":274,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.rest.connectuserws(this.user.gettoken",{"_index":335,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.rest.createroom(result).subscribe(result",{"_index":277,"title":{},"body":{"components/CreateRoomComponent.html":{},"components/DialogRoomForm.html":{}}}],["this.rest.createus",{"_index":332,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.restapi.connectuserws(this.user.gettoken",{"_index":704,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.restapi.getsocket",{"_index":234,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.restapi.getuser().subscribe(data",{"_index":700,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.room",{"_index":236,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.roomconnect",{"_index":707,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.roomev",{"_index":610,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["this.roomid",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rooms[element.id",{"_index":574,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.rooms[v.id",{"_index":581,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.roomservice.getallrooms().subscribe(data",{"_index":572,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.roomservice.getcurrentroomsws().subscribe(v",{"_index":576,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.roomservice.joinroom(id).subscribe(valu",{"_index":584,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.router.navig",{"_index":511,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.router.navigate(['/room",{"_index":337,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/NavigationService.html":{}}}],["this.router.url.split('/')[2",{"_index":699,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.snackbar.opensnackbar(err.error",{"_index":395,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["this.socket",{"_index":233,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.socket.emit(this.room",{"_index":243,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.spotify.author",{"_index":494,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.subject",{"_index":424,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.us",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.addroom(value.id",{"_index":586,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.user.getid",{"_index":493,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.user.gettoken",{"_index":650,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"components/ViewComponent.html":{}}}],["this.user.getus",{"_index":244,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["this.user.id",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.nam",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.setuser(data",{"_index":701,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.user.setuser(data.us",{"_index":415,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["this.user.setuser(respons",{"_index":334,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.user.token",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["this.warningdialog.opendialog().subscribe(valu",{"_index":583,"title":{},"body":{"components/RoomsComponent.html":{}}}],["this.wsservice.getroom",{"_index":612,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["this.wsservice.joinroom(id",{"_index":613,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["thumb",{"_index":486,"title":{},"body":{"components/MenuComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":649,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["tokeninterceptor",{"_index":91,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"overview.html":{}}}],["transform",{"_index":515,"title":{},"body":{"pipes/PipePipe.html":{}}}],["transform(valu",{"_index":516,"title":{},"body":{"pipes/PipePipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["true",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/CreateUserComponent.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"interceptors/HttpResponseHandling.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"injectables/RoomsServiceService.html":{},"injectables/SpotifyRestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"miscellaneous/variables.html":{}}}],["types/socket.io",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":800,"title":{},"body":{"index.html":{}}}],["up",{"_index":487,"title":{},"body":{"components/MenuComponent.html":{}}}],["url",{"_index":428,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["us",{"_index":342,"title":{},"body":{"components/CreateUserComponent.html":{},"index.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/CreateUserComponent.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["user'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["user.compon",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["user.component.css",{"_index":318,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.html",{"_index":319,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.t",{"_index":317,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:13",{"_index":329,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:14",{"_index":328,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:15",{"_index":324,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:20",{"_index":325,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:23",{"_index":326,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.servic",{"_index":404,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/createRoomResponse.html":{}}}],["user/cr",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/CreateUserComponent.html":{},"coverage.html":{}}}],["userid",{"_index":638,"title":{},"body":{"injectables/SpotifyRestService.html":{}}}],["usernam",{"_index":340,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["userservic",{"_index":92,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/CreateUserComponent.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/RestApiService.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{},"coverage.html":{},"interfaces/createRoomResponse.html":{},"overview.html":{}}}],["v",{"_index":582,"title":{},"body":{"components/RoomsComponent.html":{}}}],["v.id",{"_index":577,"title":{},"body":{"components/RoomsComponent.html":{}}}],["v.numberus",{"_index":578,"title":{},"body":{"components/RoomsComponent.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"interfaces/JoinRoomResponse.html":{},"pipes/PipePipe.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{},"miscellaneous/variables.html":{}}}],["value[key",{"_index":522,"title":{},"body":{"pipes/PipePipe.html":{}}}],["var",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"interfaces/JoinRoomResponse.html":{},"components/MenuComponent.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"interfaces/RoomsResponse.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"interfaces/createRoomResponse.html":{}}}],["variabl",{"_index":734,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":777,"title":{},"body":{"index.html":{}}}],["via",{"_index":803,"title":{},"body":{"index.html":{}}}],["view",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{}}}],["view.component.css",{"_index":691,"title":{},"body":{"components/ViewComponent.html":{}}}],["view.component.html",{"_index":692,"title":{},"body":{"components/ViewComponent.html":{}}}],["view/view.compon",{"_index":557,"title":{},"body":{"modules/RoomModule.html":{}}}],["viewcompon",{"_index":65,"title":{"components/ViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"modules/RoomModule.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewcreateus",{"_index":502,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewroom",{"_index":503,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewroom(id",{"_index":507,"title":{},"body":{"injectables/NavigationService.html":{}}}],["void",{"_index":195,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"components/CreateRoomComponent.html":{},"components/CreateSnackBar.html":{},"components/CreateUserComponent.html":{},"components/DialogComponent.html":{},"components/DialogRoomForm.html":{},"components/GameRoomComponent.html":{},"components/MenuComponent.html":{},"injectables/NavigationService.html":{},"injectables/ResponseSnackbarService.html":{},"injectables/RestApiService.html":{},"components/RoomsComponent.html":{},"components/SpotifyComponentComponent.html":{},"injectables/SpotifyRestService.html":{},"injectables/UserService.html":{},"components/ViewComponent.html":{}}}],["want",{"_index":392,"title":{},"body":{"interceptors/HttpResponseHandling.html":{}}}],["warningdialog",{"_index":565,"title":{},"body":{"components/RoomsComponent.html":{}}}],["warningdialogservic",{"_index":93,"title":{"injectables/WarningDialogService.html":{}},"body":{"modules/AppModule.html":{},"components/RoomsComponent.html":{},"injectables/WarningDialogService.html":{},"coverage.html":{},"overview.html":{}}}],["web",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["websocket(url",{"_index":438,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["websocket.open",{"_index":450,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["webstorag",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["window.location.href",{"_index":491,"title":{},"body":{"components/MenuComponent.html":{}}}],["work",{"_index":630,"title":{},"body":{"components/SpotifyComponentComponent.html":{}}}],["ws",{"_index":436,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.close.bind(w",{"_index":447,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.onclos",{"_index":445,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.onerror",{"_index":443,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.onmessag",{"_index":441,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.readyst",{"_index":449,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["ws.send(json.stringify(data",{"_index":451,"title":{},"body":{"interfaces/JoinRoomResponse.html":{},"injectables/RestApiService.html":{},"interfaces/RoomsResponse.html":{},"interfaces/createRoomResponse.html":{}}}],["wsservic",{"_index":597,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["wsservice.connectio",{"_index":611,"title":{},"body":{"injectables/RoomsServiceService.html":{}}}],["zone.j",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/SpotifyApiModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateRoomComponent\n\nCreateRoomComponent\n\nAppModule -->\n\nCreateRoomComponent->AppModule\n\n\n\n\n\nCreateSnackBar\n\nCreateSnackBar\n\nAppModule -->\n\nCreateSnackBar->AppModule\n\n\n\n\n\nCreateUserComponent\n\nCreateUserComponent\n\nAppModule -->\n\nCreateUserComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogRoomForm\n\nDialogRoomForm\n\nAppModule -->\n\nDialogRoomForm->AppModule\n\n\n\n\n\nGameRoomComponent\n\nGameRoomComponent\n\nAppModule -->\n\nGameRoomComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nPipePipe\n\nPipePipe\n\nAppModule -->\n\nPipePipe->AppModule\n\n\n\n\n\nRoomsComponent\n\nRoomsComponent\n\nAppModule -->\n\nRoomsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNg2Webstorage\n\nNg2Webstorage\n\nAppModule -->\n\nNg2Webstorage->AppModule\n\n\n\n\n\nRoomModule\n\nRoomModule\n\nAppModule -->\n\nRoomModule->AppModule\n\n\n\n\n\nSpotifyApiModule\n\nSpotifyApiModule\n\nAppModule -->\n\nSpotifyApiModule->AppModule\n\n\n\n\n\nHttpResponseHandling\n\nHttpResponseHandling\n\nAppModule -->\n\nHttpResponseHandling->AppModule\n\n\n\n\n\nNavigationService\n\nNavigationService\n\nAppModule -->\n\nNavigationService->AppModule\n\n\n\n\n\nResponseSnackbarService\n\nResponseSnackbarService\n\nAppModule -->\n\nResponseSnackbarService->AppModule\n\n\n\n\n\nRestApiService\n\nRestApiService\n\nAppModule -->\n\nRestApiService->AppModule\n\n\n\n\n\nRoomsServiceService\n\nRoomsServiceService\n\nAppModule -->\n\nRoomsServiceService->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nWarningDialogService\n\nWarningDialogService\n\nAppModule -->\n\nWarningDialogService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CreateRoomComponent\n                            \n                            \n                                CreateSnackBar\n                            \n                            \n                                CreateUserComponent\n                            \n                            \n                                DialogComponent\n                            \n                            \n                                DialogRoomForm\n                            \n                            \n                                GameRoomComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                PipePipe\n                            \n                            \n                                RoomsComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                CreateSnackBar\n                            \n                            \n                                DialogComponent\n                            \n                            \n                                DialogRoomForm\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     HttpResponseHandling\n                            \n                            \n                                     NavigationService\n                            \n                            \n                                     ResponseSnackbarService\n                            \n                            \n                                     RestApiService\n                            \n                            \n                                     RoomsServiceService\n                            \n                            \n                                     TokenInterceptor\n                            \n                            \n                                     UserService\n                            \n                            \n                                     WarningDialogService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    Ng2Webstorage\n                            \n                            \n                                    RoomModule\n                            \n                            \n                                    SpotifyApiModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { RoomsComponent } from './components/rooms/rooms.component';\nimport { CreateRoomComponent, DialogRoomForm } from './components/create-room/create-room.component';\n\nimport { CreateSnackBar } from './service/responseSnackbarService/response-snackbar.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\n//Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBarModule, MatProgressSpinnerModule } from '@angular/material'\nimport { MatDialogModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n//Service\nimport { RestApiService } from './service/restApi.service';\nimport { ResponseSnackbarService } from './service/responseSnackbarService/response-snackbar.service';\nimport { RoomsServiceService } from './service/roomsService/rooms-service.service';\nimport { PipePipe } from './Pipes/pipe.pipe';\nimport { CreateUserComponent } from './components/create-user/create-user.component';\nimport { UserService } from './service/user.service';\nimport { DialogComponent } from './service/warning-dialog/dialog-component/dialog/dialog.component';\nimport { WarningDialogService } from './service/warning-dialog/warning-dialog.service';\nimport { GameRoomComponent } from './components/game-room/game-room.component';\nimport { NavigationService } from './service/navigation.service'\n//Modules\nimport { RoomModule } from './modules/room/room.module';\nimport { SpotifyApiModule } from './modules/spotify-api/spotify-api.module';\nimport { MenuComponent } from './components/menu/menu.component';\n\nimport { Ng2Webstorage } from 'ngx-webstorage'\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './service/auth/token.interceptor';\nimport { HttpResponseHandling } from './service/auth/httpResponseHandling';\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'create-user',\n    component: CreateUserComponent\n  },\n  {\n    path: 'room/:id',\n    component: GameRoomComponent\n  },\n  {\n    path: 'rooms',\n    component: RoomsComponent\n  },\n  {\n    path: '**', component: CreateUserComponent\n  }\n]\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoomsComponent,\n    CreateRoomComponent,\n    DialogRoomForm,\n    CreateSnackBar,\n    PipePipe,\n    CreateUserComponent,\n    DialogComponent,\n    GameRoomComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatDialogModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    RoomModule,\n    SpotifyApiModule,\n    MatMenuModule,\n    MatIconModule,\n    Ng2Webstorage\n  ],\n  exports: [\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ],\n  entryComponents: [DialogRoomForm, CreateSnackBar, DialogComponent],\n  providers: [\n    RestApiService,\n    ResponseSnackbarService,\n    RoomsServiceService,\n    UserService,\n    WarningDialogService,\n    NavigationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpResponseHandling,\n      multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/room/chat/chat.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                chat.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                message\n                            \n                            \n                                    Private\n                                messages\n                            \n                            \n                                    Private\n                                roomId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectChat\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chat: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/room/chat/chat.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chat\n                                                  \n                                                        \n                                                                    ChatService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectChat\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectChat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(msg: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messages:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roomId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomId:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/room/chat/chat.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  private roomId;\n  private messages: any[] = [];\n  private message: string;\n  constructor(private chat: ChatService) { }\n\n  ngOnInit() {\n    console.log(this.chat.getChatSocket());\n    this.chat.getChatSocket().subscribe(message => {\n      console.log(message)\n      this.messages.push(message);\n    }\n    )\n  }\n\n  connectChat(){\n    \n  }\n\n  sendMessage(msg) {\n    console.log(msg);\n    var message = {\n      name: 'me',\n      message: msg,\n      type: 'chat'\n    }\n    this.messages.push(message);\n    this.chat.sendMessage(msg, 'chat');\n\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        \n          \n            {{message.name}}: {{message.message}}\n          \n          \n        \n      \n    \n\n  \n  \n    \n    send\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{message.name}}: {{message.message}}                                                  send  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/room/chat.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectSocket\n                            \n                            \n                                    Private\n                                room\n                            \n                            \n                                    Private\n                                socket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectChat\n                            \n                            \n                                getChatSocket\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(restApi: RestApiService, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/room/chat.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        restApi\n                                                  \n                                                        \n                                                                    RestApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectChat\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectChat(roomid: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomid\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Rx.Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChatSocket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChatSocket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMessage(msg: , type: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            connectSocket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectSocket:     Rx.Observable\n\n                    \n                \n                    \n                        \n                            Type :     Rx.Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            room\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        room:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        socket:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/room/chat.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\nimport { RestApiService } from '../../service/restApi.service';\nimport { UserService } from '../../service/user.service';\n\n@Injectable()\nexport class ChatService {\n\n  private socket;\n  private room: string;\n  private connectSocket: Rx.Observable;\n  constructor(private restApi: RestApiService, private user: UserService) {\n    this.socket = this.restApi.getSocket();\n  }\n\n  connectChat(roomid): Rx.Observable {\n    console.log('roomId:' + roomid);\n    this.room = roomid;\n    var _socket = this.socket;\n    let id = this.room;\n    this.connectSocket = Rx.Observable.fromEventPattern(data => {\n      _socket.on('roomMessage', data);\n    }\n    )\n    return this.connectSocket;\n  }\n\n  getChatSocket() {\n    return this.connectSocket;\n  }\n\n  sendMessage(msg, type) {\n\n    this.socket.emit(this.room, {\n      type: type,\n      message: msg,\n      user: this.user.getUser()\n    });\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateRoomComponent.html":{"url":"components/CreateRoomComponent.html","title":"component - CreateRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-room/create-room.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-room\n            \n\n            \n                styleUrls\n                create-room.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-room.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                response\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, rest: RestApiService, responseSnackBar: ResponseSnackbarService, navigation: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-room/create-room.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseSnackBar\n                                                  \n                                                        \n                                                                    ResponseSnackbarService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        response:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submit:     \n\n                    \n                \n                    \n                        \n                            Default value : function () {\n\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { NgIf } from '@angular/common';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, } from '@angular/material';\nimport { RestApiService } from '../../service/restApi.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { ResponseSnackbarService } from '../../service/responseSnackbarService/response-snackbar.service';\n@Component({\n  selector: 'app-create-room',\n  templateUrl: './create-room.component.html',\n  styleUrls: ['./create-room.component.css'],\n})\nexport class CreateRoomComponent implements OnInit {\n  dialogRef: MatDialogRef\n\n  response: any;\n  name: string;\n  password: string;\n  constructor(private dialog: MatDialog, private rest: RestApiService, private responseSnackBar: ResponseSnackbarService, private navigation: NavigationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(DialogRoomForm, {\n      data: {\n        name: this.name,\n        password: this.password\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.rest.createRoom(result).subscribe(result => {\n          console.log(result);\n          this.navigation.viewRoom(result.data);\n        });\n      }\n     \n    })\n  }\n\n  submit = function () {\n\n  }\n}\n\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogRoomForm {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(this.data);\n  }\n\n}\n\n    \n\n    \n        Create\n\n{{response | async}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create{{response | async}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateSnackBar.html":{"url":"components/CreateSnackBar.html","title":"component - CreateSnackBar","body":"\n                   \n\n\n\n\n\n  Components\n  CreateSnackBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/service/responseSnackbarService/response-snackbar.service.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar-component-example-snack\n            \n\n            \n                styleUrls\n                snack-bar.css\n            \n\n\n\n            \n                templateUrl\n                snack-bar-component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                mode\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'indeterminate'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar } from '@angular/material';\n\n\n@Injectable()\nexport class ResponseSnackbarService {\n\n  constructor(public matSnack: MatSnackBar) { }\n  openSnackBar(response) {\n    this.matSnack.openFromComponent(CreateSnackBar, {\n      duration: 3000,\n      data: response\n    });\n  }\n}\n\n\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component.html',\n  styleUrls: ['./snack-bar.css']\n})\n\nexport class CreateSnackBar {\n  color = 'primary';\n  mode = 'indeterminate';\n  value = 50;\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n  ngOnInit() {\n    console.log(this.data)\n  }\n}\n\n    \n\n    \n        \n\n    \n\n        {{data.status}}\n    \n\n    \n\n        {{data.message}}\n    \n\n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{data.status}}                {{data.message}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateSnackBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateUserComponent.html":{"url":"components/CreateUserComponent.html","title":"component - CreateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-user/create-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-user\n            \n\n            \n                styleUrls\n                create-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                error\n                            \n                            \n                                    Private\n                                groupForm\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestApiService, user: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-user/create-user.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                    RestApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-user/create-user.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-user/create-user.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-user/create-user.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupForm:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-user/create-user.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-user/create-user.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../../service/restApi.service';\nimport { UserService } from '../../service/user.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  private name: string;\n  private error: boolean;\n  private groupForm: any;\n  constructor(private rest: RestApiService, private user: UserService, private router: Router) {\n    this.error = false;\n  }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    this.rest.createUser({ name: this.name }).subscribe(\n      response => {\n        this.user.setUser(response);\n        this.rest.connectUserWs(this.user.getToken(), null);\n        this.router.navigate(['/rooms'], { replaceUrl: true });\n      },\n      error => {\n        this.error = true;\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        Create user\n        \n            \n            Username already used\n        \n\n        Create\n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create user                                Username already used                Create    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decline\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decline\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecline()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, } from '@angular/material';\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  decline(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(true);\n  }\n\n}\n\n    \n\n    \n          \n    {{data.text}}\n  \n\n{{data.decline}}\n{{data.submit}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{data.text}}  {{data.decline}}{{data.submit}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogRoomForm.html":{"url":"components/DialogRoomForm.html","title":"component - DialogRoomForm","body":"\n                   \n\n\n\n\n\n  Components\n  DialogRoomForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-room/create-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-overview-example-dialog\n            \n\n\n\n\n            \n                templateUrl\n                dialog-overview-example-dialog.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-room/create-room.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNoClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonNoClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/create-room/create-room.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { NgIf } from '@angular/common';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, } from '@angular/material';\nimport { RestApiService } from '../../service/restApi.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { ResponseSnackbarService } from '../../service/responseSnackbarService/response-snackbar.service';\n@Component({\n  selector: 'app-create-room',\n  templateUrl: './create-room.component.html',\n  styleUrls: ['./create-room.component.css'],\n})\nexport class CreateRoomComponent implements OnInit {\n  dialogRef: MatDialogRef\n\n  response: any;\n  name: string;\n  password: string;\n  constructor(private dialog: MatDialog, private rest: RestApiService, private responseSnackBar: ResponseSnackbarService, private navigation: NavigationService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(DialogRoomForm, {\n      data: {\n        name: this.name,\n        password: this.password\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.rest.createRoom(result).subscribe(result => {\n          console.log(result);\n          this.navigation.viewRoom(result.data);\n        });\n      }\n     \n    })\n  }\n\n  submit = function () {\n\n  }\n}\n\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogRoomForm {\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(this.data);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    Password\n    \n        \n    \n\n    Create\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Password                    Create'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogRoomForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameRoomComponent.html":{"url":"components/GameRoomComponent.html","title":"component - GameRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-room/game-room.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-room\n            \n\n            \n                styleUrls\n                game-room.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-room.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-room/game-room.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/game-room/game-room.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-game-room',\n  templateUrl: './game-room.component.html',\n  styleUrls: ['./game-room.component.css']\n})\nexport class GameRoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpResponseHandling.html":{"url":"interceptors/HttpResponseHandling.html","title":"interceptor - HttpResponseHandling","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  HttpResponseHandling\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/auth/httpResponseHandling.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigation: NavigationService, snackbar: ResponseSnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/auth/httpResponseHandling.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    ResponseSnackbarService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/auth/httpResponseHandling.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { NavigationService } from '../navigation.service';\nimport 'rxjs/add/operator/do';\nimport { ResponseSnackbarService } from '../responseSnackbarService/response-snackbar.service';\n\n@Injectable()\nexport class HttpResponseHandling implements HttpInterceptor {\n    constructor(private navigation: NavigationService, private snackbar: ResponseSnackbarService) { }\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n        return next.handle(request).do((event: HttpEvent) => {\n            if (event instanceof HttpResponse) {\n                // do stuff with response if you want\n            }\n        }, (err: any) => {\n            if (err instanceof HttpErrorResponse) {\n                if (err.status) {\n                    this.snackbar.openSnackBar(err.error);\n                    this.navigation.viewCreateUser();\n                }\n            }\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JoinRoomResponse.html":{"url":"interfaces/JoinRoomResponse.html","title":"interface - JoinRoomResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JoinRoomResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/restApi.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     JSON\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JSON\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Component } from '@angular/core/src/metadata/directives';\nimport { UserService } from './user.service';\nimport * as Rx from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\nimport { NavigationService } from './navigation.service';\n\n\n\ninterface RoomsResponse {\n    id: string;\n    name: string;\n    password: string;\n    numberUser: number;\n    max: number;\n}\ninterface RoomsResponse extends Array { }\n\ninterface JoinRoomResponse {\n    id: string;\n    user: JSON\n}\n\ninterface createRoomResponse {\n    data: string;\n    message: string;\n}\n\n@Injectable()\n\nexport class RestApiService {\n    private data: JSON;\n    private createRoomRoute: string;\n    response: any;\n    private socket;\n    constructor(private http: HttpClient, private user: UserService, private navigate: NavigationService) {\n        this.socket = io.connect(\"http://192.168.178.61:8000/\");\n\n\n        this.getUser().subscribe(data => {\n            this.user.setUser(data.user);\n            this.connectUserWs(this.user.getToken(), value => {\n                if (!value) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n\n                }\n\n                console.log(data);\n                if (data.room) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n                    this.navigate.viewRooms();\n                }\n            });\n        });\n\n\n    }\n\n\n    private subject: Rx.Subject;\n\n    public connect(url): Rx.Subject {\n        if (!this.subject) {\n            this.subject = this.create(url);\n            console.log(\"Successfully connected: \" + url);\n        }\n        return this.subject;\n    }\n\n    public connectIO(): Rx.Observable {\n\n        var _socket = this.socket;\n        return Rx.Observable.fromEventPattern(data => {\n            _socket.on('newRoom', data);\n        }\n\n        )\n\n    }\n\n    public connectUserWs(id, cb) {\n\n        var _socket = this.socket;\n        let callback = cb\n\n        console.log(this.socket.emit('setUserWs', { id }, callback));\n\n\n    }\n\n\n    private create(url): Rx.Subject {\n        let ws = new WebSocket(url);\n\n        let observable = Rx.Observable.create(\n            (obs: Rx.Observer) => {\n                ws.onmessage = obs.next.bind(obs);\n                ws.onerror = obs.error.bind(obs);\n                ws.onclose = obs.complete.bind(obs);\n                return ws.close.bind(ws);\n            })\n        let observer = {\n            next: (data: Object) => {\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(data));\n                }\n            }\n        }\n        return Rx.Subject.create(observer, observable);\n    }\n\n    ngOnInit() {\n        this.createRoomRoute = 'http://192.168.178.61:8000/api/createRoom';\n    }\n\n    createRoom(data) {\n\n        return this.http.post('http://192.168.178.61:8000/api/createRoom', { data: data });\n    }\n\n    createUser(name) {\n        return this.http.post('http://192.168.178.61:8000/api/createUser', name);\n    }\n\n    getRooms() {\n        return this.http.get('http://192.168.178.61:8000/api/Rooms');\n    }\n\n    joinRoom(id) {\n        return this.http.post('http://192.168.178.61:8000/api/joinRoom', { user: this.user.getUser(), id: id });\n    }\n\n    getUser() {\n        return this.http.get('http://192.168.178.61:8000/api/user');\n    }\n\n\n\n    leaveRoom() {\n\n    }\n\n    checkUser() {\n\n    }\n\n    getSocket() {\n        return this.socket;\n    }\n\n}\n\n// \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/menu/menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fullscreenApp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                spotifyAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, user: UserService, spotify: SpotifyRestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/menu/menu.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        spotify\n                                                  \n                                                        \n                                                                    SpotifyRestService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullscreenApp\n                            \n                            \n                        \n                    \n                \n                \n                    \nfullscreenApp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/menu/menu.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/menu/menu.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spotifyAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nspotifyAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/menu/menu.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { UserService } from '../../service/user.service';\nimport { SpotifyRestService } from '../../modules/spotify-api/spotify-rest.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer, private user: UserService, private spotify: SpotifyRestService) {\n    iconRegistry.addSvgIcon(\n      'thumbs-up',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n  }\n\n  ngOnInit() {\n  }\n\n  fullscreenApp() {\n    document.body.webkitRequestFullscreen();\n  }\n\n  spotifyAuth() {\n    window.location.href = 'http://192.168.178.61:8000/api/spotify/auth/' + this.user.getId();\n    //this.spotify.authorize();\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      more_vert\n    \n    \n      \n        dialpad\n        Fullscreen\n      \n    \n  \n  \n    PartyGame\n  \n  \n    \n      host\n    \n    \n      \n        dialpad\n        Spotify Guess Game\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            more_vert                      dialpad        Fullscreen                  PartyGame              host                      dialpad        Spotify Guess Game            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/navigation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewCreateUser\n                            \n                            \n                                viewRoom\n                            \n                            \n                                viewRooms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/navigation.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewCreateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nviewCreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/navigation.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \nviewRoom(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/navigation.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewRooms\n                            \n                            \n                        \n                    \n                \n                \n                    \nviewRooms()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/navigation.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class NavigationService {\n\n  constructor(private router:Router) { }\n\n  viewCreateUser(){\n    this.router.navigate(['/'], {replaceUrl: false});\n  }\n\n  viewRooms(){\n    this.router.navigate(['/rooms'], {replaceUrl: false});\n  }\n\n  viewRoom(id){\n    this.router.navigate(['/room', id], {replaceUrl: false});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PipePipe.html":{"url":"pipes/PipePipe.html","title":"pipe - PipePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PipePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Pipes/pipe.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: , args: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/Pipes/pipe.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure : false\n})\nexport class PipePipe implements PipeTransform {\n\n  transform(value, args: string[]): any {\n    let keys = [];\n    for (let key in value) {\n      keys.push({ key: key, value: value[key] });\n    }\n    return keys;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseSnackbarService.html":{"url":"injectables/ResponseSnackbarService.html","title":"injectable - ResponseSnackbarService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResponseSnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/responseSnackbarService/response-snackbar.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matSnack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matSnack: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matSnack\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(response: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matSnack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matSnack:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/responseSnackbarService/response-snackbar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar } from '@angular/material';\n\n\n@Injectable()\nexport class ResponseSnackbarService {\n\n  constructor(public matSnack: MatSnackBar) { }\n  openSnackBar(response) {\n    this.matSnack.openFromComponent(CreateSnackBar, {\n      duration: 3000,\n      data: response\n    });\n  }\n}\n\n\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component.html',\n  styleUrls: ['./snack-bar.css']\n})\n\nexport class CreateSnackBar {\n  color = 'primary';\n  mode = 'indeterminate';\n  value = 50;\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n  ngOnInit() {\n    console.log(this.data)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestApiService.html":{"url":"injectables/RestApiService.html","title":"injectable - RestApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RestApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/restApi.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRoomRoute\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                response\n                            \n                            \n                                    Private\n                                socket\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUser\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                connectIO\n                            \n                            \n                                    Public\n                                connectUserWs\n                            \n                            \n                                    Private\n                                create\n                            \n                            \n                                createRoom\n                            \n                            \n                                createUser\n                            \n                            \n                                getRooms\n                            \n                            \n                                getSocket\n                            \n                            \n                                getUser\n                            \n                            \n                                joinRoom\n                            \n                            \n                                leaveRoom\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, user: UserService, navigate: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/restApi.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        connect(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Rx.Subject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectIO\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        connectIO()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Rx.Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectUserWs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        connectUserWs(id: , cb: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cb\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Rx.Subject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateRoom(data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser(name: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRooms\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRooms()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSocket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSocket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joinRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \njoinRoom(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaveRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \nleaveRoom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createRoomRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createRoomRoute:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     JSON\n\n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        response:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        socket:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     Rx.Subject\n\n                    \n                \n                    \n                        \n                            Type :     Rx.Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/restApi.service.ts:63\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Component } from '@angular/core/src/metadata/directives';\nimport { UserService } from './user.service';\nimport * as Rx from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\nimport { NavigationService } from './navigation.service';\n\n\n\ninterface RoomsResponse {\n    id: string;\n    name: string;\n    password: string;\n    numberUser: number;\n    max: number;\n}\ninterface RoomsResponse extends Array { }\n\ninterface JoinRoomResponse {\n    id: string;\n    user: JSON\n}\n\ninterface createRoomResponse {\n    data: string;\n    message: string;\n}\n\n@Injectable()\n\nexport class RestApiService {\n    private data: JSON;\n    private createRoomRoute: string;\n    response: any;\n    private socket;\n    constructor(private http: HttpClient, private user: UserService, private navigate: NavigationService) {\n        this.socket = io.connect(\"http://192.168.178.61:8000/\");\n\n\n        this.getUser().subscribe(data => {\n            this.user.setUser(data.user);\n            this.connectUserWs(this.user.getToken(), value => {\n                if (!value) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n\n                }\n\n                console.log(data);\n                if (data.room) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n                    this.navigate.viewRooms();\n                }\n            });\n        });\n\n\n    }\n\n\n    private subject: Rx.Subject;\n\n    public connect(url): Rx.Subject {\n        if (!this.subject) {\n            this.subject = this.create(url);\n            console.log(\"Successfully connected: \" + url);\n        }\n        return this.subject;\n    }\n\n    public connectIO(): Rx.Observable {\n\n        var _socket = this.socket;\n        return Rx.Observable.fromEventPattern(data => {\n            _socket.on('newRoom', data);\n        }\n\n        )\n\n    }\n\n    public connectUserWs(id, cb) {\n\n        var _socket = this.socket;\n        let callback = cb\n\n        console.log(this.socket.emit('setUserWs', { id }, callback));\n\n\n    }\n\n\n    private create(url): Rx.Subject {\n        let ws = new WebSocket(url);\n\n        let observable = Rx.Observable.create(\n            (obs: Rx.Observer) => {\n                ws.onmessage = obs.next.bind(obs);\n                ws.onerror = obs.error.bind(obs);\n                ws.onclose = obs.complete.bind(obs);\n                return ws.close.bind(ws);\n            })\n        let observer = {\n            next: (data: Object) => {\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(data));\n                }\n            }\n        }\n        return Rx.Subject.create(observer, observable);\n    }\n\n    ngOnInit() {\n        this.createRoomRoute = 'http://192.168.178.61:8000/api/createRoom';\n    }\n\n    createRoom(data) {\n\n        return this.http.post('http://192.168.178.61:8000/api/createRoom', { data: data });\n    }\n\n    createUser(name) {\n        return this.http.post('http://192.168.178.61:8000/api/createUser', name);\n    }\n\n    getRooms() {\n        return this.http.get('http://192.168.178.61:8000/api/Rooms');\n    }\n\n    joinRoom(id) {\n        return this.http.post('http://192.168.178.61:8000/api/joinRoom', { user: this.user.getUser(), id: id });\n    }\n\n    getUser() {\n        return this.http.get('http://192.168.178.61:8000/api/user');\n    }\n\n\n\n    leaveRoom() {\n\n    }\n\n    checkUser() {\n\n    }\n\n    getSocket() {\n        return this.socket;\n    }\n\n}\n\n// \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomModule.html":{"url":"modules/RoomModule.html","title":"module - RoomModule","body":"\n                   \n\n\n\n\n  Modules\n  RoomModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_declarations\n\n\n\ncluster_RoomModule_exports\n\n\n\ncluster_RoomModule_providers\n\n\n\n\nChatComponent\n\nChatComponent\n\n\n\nRoomModule\n\nRoomModule\n\nRoomModule -->\n\nChatComponent->RoomModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nRoomModule -->\n\nViewComponent->RoomModule\n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nRoomModule->ViewComponent \n\n\n\n\n\nChatService\n\nChatService\n\nRoomModule -->\n\nChatService->RoomModule\n\n\n\n\n\nRestApiService\n\nRestApiService\n\nRoomModule -->\n\nRestApiService->RoomModule\n\n\n\n\n\nUserService\n\nUserService\n\nRoomModule -->\n\nUserService->RoomModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/room/room.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChatComponent\n                            \n                            \n                                ViewComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ChatService\n                            \n                            \n                                     RestApiService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './view/view.component';\nimport { ChatComponent } from './chat/chat.component';\n\nimport { MatListModule } from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\n//Service\nimport {ChatService} from './chat.service';\nimport {RestApiService} from '../../service/restApi.service';\nimport {UserService} from '../../service/user.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatCardModule\n  ],\n  declarations: [\n    ViewComponent,\n    ChatComponent\n  ],\n  exports: [\n    ViewComponent\n  ],\n  providers:[\n    ChatService,\n    RestApiService,\n    UserService\n  ]\n})\nexport class RoomModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoomsComponent.html":{"url":"components/RoomsComponent.html","title":"component - RoomsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RoomsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rooms/rooms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rooms\n            \n\n            \n                styleUrls\n                rooms.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rooms.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                rooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                join\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(roomService: RoomsServiceService, warningDialog: WarningDialogService, navigation: NavigationService, user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rooms/rooms.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomService\n                                                  \n                                                        \n                                                                    RoomsServiceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        warningDialog\n                                                  \n                                                        \n                                                                    WarningDialogService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            join\n                            \n                            \n                        \n                    \n                \n                \n                    \njoin(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rooms/rooms.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rooms/rooms.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     JSON\n\n                    \n                \n                    \n                        \n                            Type :     JSON\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rooms/rooms.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            rooms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rooms:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rooms/rooms.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoomsServiceService } from '../../service/roomsService/rooms-service.service';\nimport { PipePipe } from '../../Pipes/pipe.pipe';\nimport { WarningDialogService } from '../../service/warning-dialog/warning-dialog.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { UserService } from '../../service/user.service';\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\n\nexport class RoomsComponent implements OnInit {\n\n  private rooms: any[] = [];\n  private config: JSON;\n\n  constructor(private roomService: RoomsServiceService,\n    private warningDialog: WarningDialogService, private navigation: NavigationService, private user: UserService) {\n\n  }\n\n  ngOnInit() {\n    this.roomService.getAllRooms().subscribe(data => {\n      data.forEach(element => {\n        this.rooms[element.id] = element;\n      })\n    }, error => {\n      console.log('error' + error);\n    })\n\n    this.roomService.getCurrentRoomsWS().subscribe(v => {\n      if (!v.id) {\n        return;\n      }\n      if (v.numberUser === 0) {\n        delete this.rooms[v.id];\n      }\n      else {\n        this.rooms[v.id] = v;\n      }\n    }, error => {\n      console.log('error' + error);\n    })\n  }\n\n  join(id) {\n    this.warningDialog.openDialog().subscribe(value => {\n      if (value) {\n        this.roomService.joinRoom(id).subscribe(value => {\n          console.log(value);\n          this.user.addRoom(value.id);\n          this.navigation.viewRoom(value.id);\n\n        }),\n          error => {\n\n          }\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        Rooms\n\n\n\n\n    \n        {{key.value.name}} {{key.value.numberUser}}/{{key.value.max}}\n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Rooms            {{key.value.name}} {{key.value.numberUser}}/{{key.value.max}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RoomsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoomsResponse.html":{"url":"interfaces/RoomsResponse.html","title":"interface - RoomsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoomsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/restApi.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        max\n                                \n                                \n                                        name\n                                \n                                \n                                        numberUser\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberUser\n                                    \n                                \n                                \n                                    \n                                        numberUser:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Component } from '@angular/core/src/metadata/directives';\nimport { UserService } from './user.service';\nimport * as Rx from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\nimport { NavigationService } from './navigation.service';\n\n\n\ninterface RoomsResponse {\n    id: string;\n    name: string;\n    password: string;\n    numberUser: number;\n    max: number;\n}\ninterface RoomsResponse extends Array { }\n\ninterface JoinRoomResponse {\n    id: string;\n    user: JSON\n}\n\ninterface createRoomResponse {\n    data: string;\n    message: string;\n}\n\n@Injectable()\n\nexport class RestApiService {\n    private data: JSON;\n    private createRoomRoute: string;\n    response: any;\n    private socket;\n    constructor(private http: HttpClient, private user: UserService, private navigate: NavigationService) {\n        this.socket = io.connect(\"http://192.168.178.61:8000/\");\n\n\n        this.getUser().subscribe(data => {\n            this.user.setUser(data.user);\n            this.connectUserWs(this.user.getToken(), value => {\n                if (!value) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n\n                }\n\n                console.log(data);\n                if (data.room) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n                    this.navigate.viewRooms();\n                }\n            });\n        });\n\n\n    }\n\n\n    private subject: Rx.Subject;\n\n    public connect(url): Rx.Subject {\n        if (!this.subject) {\n            this.subject = this.create(url);\n            console.log(\"Successfully connected: \" + url);\n        }\n        return this.subject;\n    }\n\n    public connectIO(): Rx.Observable {\n\n        var _socket = this.socket;\n        return Rx.Observable.fromEventPattern(data => {\n            _socket.on('newRoom', data);\n        }\n\n        )\n\n    }\n\n    public connectUserWs(id, cb) {\n\n        var _socket = this.socket;\n        let callback = cb\n\n        console.log(this.socket.emit('setUserWs', { id }, callback));\n\n\n    }\n\n\n    private create(url): Rx.Subject {\n        let ws = new WebSocket(url);\n\n        let observable = Rx.Observable.create(\n            (obs: Rx.Observer) => {\n                ws.onmessage = obs.next.bind(obs);\n                ws.onerror = obs.error.bind(obs);\n                ws.onclose = obs.complete.bind(obs);\n                return ws.close.bind(ws);\n            })\n        let observer = {\n            next: (data: Object) => {\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(data));\n                }\n            }\n        }\n        return Rx.Subject.create(observer, observable);\n    }\n\n    ngOnInit() {\n        this.createRoomRoute = 'http://192.168.178.61:8000/api/createRoom';\n    }\n\n    createRoom(data) {\n\n        return this.http.post('http://192.168.178.61:8000/api/createRoom', { data: data });\n    }\n\n    createUser(name) {\n        return this.http.post('http://192.168.178.61:8000/api/createUser', name);\n    }\n\n    getRooms() {\n        return this.http.get('http://192.168.178.61:8000/api/Rooms');\n    }\n\n    joinRoom(id) {\n        return this.http.post('http://192.168.178.61:8000/api/joinRoom', { user: this.user.getUser(), id: id });\n    }\n\n    getUser() {\n        return this.http.get('http://192.168.178.61:8000/api/user');\n    }\n\n\n\n    leaveRoom() {\n\n    }\n\n    checkUser() {\n\n    }\n\n    getSocket() {\n        return this.socket;\n    }\n\n}\n\n// \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsServiceService.html":{"url":"injectables/RoomsServiceService.html","title":"injectable - RoomsServiceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoomsServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/roomsService/rooms-service.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllRooms\n                            \n                            \n                                getCurrentRoomsWS\n                            \n                            \n                                joinRoom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wsService: RestApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/roomsService/rooms-service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wsService\n                                                  \n                                                        \n                                                                    RestApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllRooms\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllRooms()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/roomsService/rooms-service.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentRoomsWS\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentRoomsWS()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/roomsService/rooms-service.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joinRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \njoinRoom(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/roomsService/rooms-service.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roomEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomEvent:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/roomsService/rooms-service.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject} from 'rxjs/Rx';\nimport { RestApiService} from '../restApi.service';\n\n\n@Injectable()\nexport class RoomsServiceService {\n\n\troomEvent:any;\n\n\tconstructor(private wsService: RestApiService) {\n\t\t/*this.messages = >wsService\n\t\t\t.connect(CHAT_URL)\n\t\t\t.map((response: MessageEvent): Message => {\n\t\t\t\tlet data = JSON.parse(response.data);\n\t\t\t\treturn {\n\t\t\t\t\tauthor: data.author,\n\t\t\t\t\tmessage: data.message\n\t\t\t\t}\n\t  });*/\n\t  \n\t  this.roomEvent = wsService.connectIO();\n\n\t}\n\n\tgetAllRooms(){\n\t\treturn this.wsService.getRooms();\n\t}\n\n\tgetCurrentRoomsWS(){\n\t\treturn this.roomEvent;\n\t}\n\n\tjoinRoom(id){\n\t\treturn this.wsService.joinRoom(id);\n\t}\n\n\t\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpotifyApiModule.html":{"url":"modules/SpotifyApiModule.html","title":"module - SpotifyApiModule","body":"\n                   \n\n\n\n\n  Modules\n  SpotifyApiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpotifyApiModule\n\n\n\ncluster_SpotifyApiModule_declarations\n\n\n\ncluster_SpotifyApiModule_providers\n\n\n\n\nSpotifyComponentComponent\n\nSpotifyComponentComponent\n\n\n\nSpotifyApiModule\n\nSpotifyApiModule\n\nSpotifyApiModule -->\n\nSpotifyComponentComponent->SpotifyApiModule\n\n\n\n\n\nSpotifyRestService\n\nSpotifyRestService\n\nSpotifyApiModule -->\n\nSpotifyRestService->SpotifyApiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/spotify-api/spotify-api.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SpotifyComponentComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SpotifyRestService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpotifyComponentComponent } from './spotify-component/spotify-component.component';\nimport { SpotifyRestService } from './spotify-rest.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SpotifyComponentComponent],\n  providers: [\n    SpotifyRestService\n  ]\n})\nexport class SpotifyApiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyApiService.html":{"url":"injectables/SpotifyApiService.html","title":"injectable - SpotifyApiService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SpotifyApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/room/spotify-api.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/room/spotify-api.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SpotifyApiService {\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpotifyComponentComponent.html":{"url":"components/SpotifyComponentComponent.html","title":"component - SpotifyComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpotifyComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/spotify-api/spotify-component/spotify-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spotify-component\n            \n\n            \n                styleUrls\n                spotify-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spotify-component.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/spotify-api/spotify-component/spotify-component.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-component/spotify-component.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-component',\n  templateUrl: './spotify-component.component.html',\n  styleUrls: ['./spotify-component.component.css']\n})\nexport class SpotifyComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  spotify-component works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  spotify-component works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpotifyComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpotifyRestService.html":{"url":"injectables/SpotifyRestService.html","title":"injectable - SpotifyRestService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SpotifyRestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/spotify-api/spotify-rest.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorize\n                            \n                            \n                                pause\n                            \n                            \n                                playSong\n                            \n                            \n                                resume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/spotify-api/spotify-rest.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorize\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthorize(userid: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-rest.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \npause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-rest.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playSong\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaySong(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-rest.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resume\n                            \n                            \n                        \n                    \n                \n                \n                    \nresume()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-rest.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/spotify-api/spotify-rest.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n\n@Injectable()\nexport class SpotifyRestService {\n  private config: any;\n  constructor(private http: HttpClient) {\n\n  }\n\n\n\n  authorize(userid) {\n    this.http.get('http://192.168.178.61:8000/api/spotifyAuth', {\n      params: {\n        id: userid\n      }\n    })\n  }\n\n  playSong(id) {\n\n  }\n\n  pause() {\n\n  }\n\n  resume() {\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/auth/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserService, navigation: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/auth/token.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                    NavigationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/auth/token.interceptor.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { UserService } from '../user.service';\nimport { Observable } from 'rxjs/Observable';\nimport { NavigationService } from '../navigation.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(private user: UserService, private navigation: NavigationService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        let token = this.user.getToken();\n        if (!token) {\n            this.navigation.viewCreateUser();\n        }\n        request = request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${this.user.getToken()}`\n            }\n\n        });\n        return next.handle(request);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                roomId\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRoom\n                            \n                            \n                                getId\n                            \n                            \n                                getName\n                            \n                            \n                                getRoom\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                setId\n                            \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_localStService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _localStService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \naddRoom(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRoom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     JSON\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setId\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetId(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/user.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roomId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/user.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage'\n\n@Injectable()\nexport class UserService {\n  private id: string;\n  private roomId: string;\n  private user: any;\n  private token: string;\n  constructor(private _localStService: LocalStorageService) { }\n\n  setId(id) {\n    this.id = id;\n  }\n\n  getId(): string {\n    return this.user.id;\n  }\n\n  setUser(user) {\n    this.user = user;\n    if (this.user.token) {\n      this._localStService.store('token', this.user.token);\n    }\n  }\n\n  getUser(): JSON {\n    return this.user;\n  }\n\n  getToken(): string {\n    return this._localStService.retrieve('token');\n  }\n\n  addRoom(id) {\n    console.log('user service: add Room:' + id);\n    this.roomId = id;\n  }\n\n  getRoom() {\n    return this.roomId;\n  }\n\n  getName() {\n    return this.user.name;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewComponent.html":{"url":"components/ViewComponent.html","title":"component - ViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/room/view/view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-room-view\n            \n\n            \n                styleUrls\n                view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                roomConnected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                joinRoom\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, user: UserService, router: Router, restApi: RestApiService, chat: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/room/view/view.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        restApi\n                                                  \n                                                        \n                                                                    RestApiService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        chat\n                                                  \n                                                        \n                                                                    ChatService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joinRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \njoinRoom(roomId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/view/view.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/room/view/view.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roomConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomConnected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/room/view/view.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../service/user.service';\nimport { RestApiService } from '../../../service/restApi.service';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-room-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  private roomConnected: boolean;\n  constructor(private http: HttpClient, private user: UserService, private router: Router, private restApi: RestApiService, private chat: ChatService) {\n\n\n    let roomId = this.router.url.split('/')[2];\n    if (!this.user.getToken()) {\n      this.restApi.getUser().subscribe(data => {\n        this.user.setUser(data);\n        this.joinRoom(roomId);\n      }, err => {\n        console.log(err);\n      })\n    } else {\n      this.joinRoom(roomId);\n    }\n\n\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  joinRoom(roomId) {\n    this.restApi.connectUserWs(this.user.getToken(), value => {\n      this.http.post('http://192.168.178.61:8000/api/joinRoom/' + roomId, { user: this.user.getUser() }).subscribe(data => {\n        console.log(data);\n        this.chat.connectChat(data.room);\n        this.roomConnected = true;\n      }, err => {\n        this.roomConnected = false;\n        console.error(err);\n      })\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CreateRoomComponent', 'selector': 'app-create-room'},{'name': 'CreateSnackBar', 'selector': 'snack-bar-component-example-snack'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'DialogRoomForm', 'selector': 'dialog-overview-example-dialog'},{'name': 'GameRoomComponent', 'selector': 'app-game-room'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'RoomsComponent', 'selector': 'app-rooms'},{'name': 'SpotifyComponentComponent', 'selector': 'app-spotify-component'},{'name': 'ViewComponent', 'selector': 'app-room-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WarningDialogService.html":{"url":"injectables/WarningDialogService.html","title":"injectable - WarningDialogService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WarningDialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/warning-dialog/warning-dialog.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/warning-dialog/warning-dialog.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/service/warning-dialog/warning-dialog.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/warning-dialog/warning-dialog.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DialogComponent } from './dialog-component/dialog/dialog.component';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n@Injectable()\nexport class WarningDialogService {\n  dialogRef: MatDialogRef\n  constructor(private dialog: MatDialog) { }\n\n\n  openDialog() {\n    console.log('openDialog');\n    this.dialogRef = this.dialog.open(DialogComponent, {\n      data: {\n        text: \"nichts\",\n        submit: \"Join\",\n        decline: \"dont\"\n      }\n    });\n    return this.dialogRef.afterClosed();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/Pipes/pipe.pipe.ts\n            \n            \n                pipe\n            \n            \n                PipePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/components/create-room/create-room.component.ts\n            \n            \n                component\n            \n            \n                CreateRoomComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/components/create-room/create-room.component.ts\n            \n            \n                component\n            \n            \n                DialogRoomForm\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/components/create-user/create-user.component.ts\n            \n            \n                component\n            \n            \n                CreateUserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/components/game-room/game-room.component.ts\n            \n            \n                component\n            \n            \n                GameRoomComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/rooms/rooms.component.ts\n            \n            \n                component\n            \n            \n                RoomsComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/modules/room/chat.service.ts\n            \n            \n                injectable\n            \n            \n                ChatService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/modules/room/chat/chat.component.ts\n            \n            \n                component\n            \n            \n                ChatComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/modules/room/spotify-api.service.ts\n            \n            \n                injectable\n            \n            \n                SpotifyApiService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/modules/room/view/view.component.ts\n            \n            \n                component\n            \n            \n                ViewComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/modules/spotify-api/spotify-component/spotify-component.component.ts\n            \n            \n                component\n            \n            \n                SpotifyComponentComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/modules/spotify-api/spotify-rest.service.ts\n            \n            \n                injectable\n            \n            \n                SpotifyRestService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/service/navigation.service.ts\n            \n            \n                injectable\n            \n            \n                NavigationService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/service/responseSnackbarService/response-snackbar.service.ts\n            \n            \n                component\n            \n            \n                CreateSnackBar\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/service/responseSnackbarService/response-snackbar.service.ts\n            \n            \n                injectable\n            \n            \n                ResponseSnackbarService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/service/restApi.service.ts\n            \n            \n                injectable\n            \n            \n                RestApiService\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/app/service/restApi.service.ts\n            \n            \n                interface\n            \n            \n                JoinRoomResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/service/restApi.service.ts\n            \n            \n                interface\n            \n            \n                RoomsResponse\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/service/restApi.service.ts\n            \n            \n                interface\n            \n            \n                RoomsResponse\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/service/restApi.service.ts\n            \n            \n                interface\n            \n            \n                createRoomResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/service/roomsService/rooms-service.service.ts\n            \n            \n                injectable\n            \n            \n                RoomsServiceService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/service/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/service/warning-dialog/dialog-component/dialog/dialog.component.ts\n            \n            \n                component\n            \n            \n                DialogComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/service/warning-dialog/warning-dialog.service.ts\n            \n            \n                injectable\n            \n            \n                WarningDialogService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/createRoomResponse.html":{"url":"interfaces/createRoomResponse.html","title":"interface - createRoomResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  createRoomResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/restApi.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Component } from '@angular/core/src/metadata/directives';\nimport { UserService } from './user.service';\nimport * as Rx from 'rxjs/Rx';\nimport * as io from 'socket.io-client';\nimport { NavigationService } from './navigation.service';\n\n\n\ninterface RoomsResponse {\n    id: string;\n    name: string;\n    password: string;\n    numberUser: number;\n    max: number;\n}\ninterface RoomsResponse extends Array { }\n\ninterface JoinRoomResponse {\n    id: string;\n    user: JSON\n}\n\ninterface createRoomResponse {\n    data: string;\n    message: string;\n}\n\n@Injectable()\n\nexport class RestApiService {\n    private data: JSON;\n    private createRoomRoute: string;\n    response: any;\n    private socket;\n    constructor(private http: HttpClient, private user: UserService, private navigate: NavigationService) {\n        this.socket = io.connect(\"http://192.168.178.61:8000/\");\n\n\n        this.getUser().subscribe(data => {\n            this.user.setUser(data.user);\n            this.connectUserWs(this.user.getToken(), value => {\n                if (!value) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n\n                }\n\n                console.log(data);\n                if (data.room) {\n                    this.navigate.viewRoom(data.room);\n                } else {\n                    this.navigate.viewRooms();\n                }\n            });\n        });\n\n\n    }\n\n\n    private subject: Rx.Subject;\n\n    public connect(url): Rx.Subject {\n        if (!this.subject) {\n            this.subject = this.create(url);\n            console.log(\"Successfully connected: \" + url);\n        }\n        return this.subject;\n    }\n\n    public connectIO(): Rx.Observable {\n\n        var _socket = this.socket;\n        return Rx.Observable.fromEventPattern(data => {\n            _socket.on('newRoom', data);\n        }\n\n        )\n\n    }\n\n    public connectUserWs(id, cb) {\n\n        var _socket = this.socket;\n        let callback = cb\n\n        console.log(this.socket.emit('setUserWs', { id }, callback));\n\n\n    }\n\n\n    private create(url): Rx.Subject {\n        let ws = new WebSocket(url);\n\n        let observable = Rx.Observable.create(\n            (obs: Rx.Observer) => {\n                ws.onmessage = obs.next.bind(obs);\n                ws.onerror = obs.error.bind(obs);\n                ws.onclose = obs.complete.bind(obs);\n                return ws.close.bind(ws);\n            })\n        let observer = {\n            next: (data: Object) => {\n                if (ws.readyState === WebSocket.OPEN) {\n                    ws.send(JSON.stringify(data));\n                }\n            }\n        }\n        return Rx.Subject.create(observer, observable);\n    }\n\n    ngOnInit() {\n        this.createRoomRoute = 'http://192.168.178.61:8000/api/createRoom';\n    }\n\n    createRoom(data) {\n\n        return this.http.post('http://192.168.178.61:8000/api/createRoom', { data: data });\n    }\n\n    createUser(name) {\n        return this.http.post('http://192.168.178.61:8000/api/createUser', name);\n    }\n\n    getRooms() {\n        return this.http.get('http://192.168.178.61:8000/api/Rooms');\n    }\n\n    joinRoom(id) {\n        return this.http.post('http://192.168.178.61:8000/api/joinRoom', { user: this.user.getUser(), id: id });\n    }\n\n    getUser() {\n        return this.http.get('http://192.168.178.61:8000/api/user');\n    }\n\n\n\n    leaveRoom() {\n\n    }\n\n    checkUser() {\n\n    }\n\n    getSocket() {\n        return this.socket;\n    }\n\n}\n\n// \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.9\n        \n            @angular/cdk : ^5.2.4\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/material : ^5.2.4\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @types/socket.io-client : ^1.4.32\n        \n            body-parser : ^1.18.2\n        \n            core-js : ^2.4.1\n        \n            express : ^4.16.3\n        \n            mongodb : ^3.0.4\n        \n            ngx-webstorage : ^2.0.1\n        \n            request : ^2.86.0\n        \n            rxjs : ^5.5.6\n        \n            socket.io : ^2.0.4\n        \n            spotify-web-api-node : ^3.1.1\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSpotifyGuessGame\nThis project was generated with Angular CLI version 1.7.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpotifyApiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_declarations\n\n\n\ncluster_RoomModule_exports\n\n\n\ncluster_RoomModule_providers\n\n\n\ncluster_SpotifyApiModule\n\n\n\ncluster_SpotifyApiModule_declarations\n\n\n\ncluster_SpotifyApiModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateRoomComponent\n\nCreateRoomComponent\n\nAppModule -->\n\nCreateRoomComponent->AppModule\n\n\n\n\n\nCreateSnackBar\n\nCreateSnackBar\n\nAppModule -->\n\nCreateSnackBar->AppModule\n\n\n\n\n\nCreateUserComponent\n\nCreateUserComponent\n\nAppModule -->\n\nCreateUserComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nDialogRoomForm\n\nDialogRoomForm\n\nAppModule -->\n\nDialogRoomForm->AppModule\n\n\n\n\n\nGameRoomComponent\n\nGameRoomComponent\n\nAppModule -->\n\nGameRoomComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nPipePipe\n\nPipePipe\n\nAppModule -->\n\nPipePipe->AppModule\n\n\n\n\n\nRoomsComponent\n\nRoomsComponent\n\nAppModule -->\n\nRoomsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nNg2Webstorage\n\nNg2Webstorage\n\nAppModule -->\n\nNg2Webstorage->AppModule\n\n\n\n\n\nRoomModule\n\nRoomModule\n\nAppModule -->\n\nRoomModule->AppModule\n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nRoomModule->ViewComponent \n\n\n\n\n\nSpotifyApiModule\n\nSpotifyApiModule\n\nAppModule -->\n\nSpotifyApiModule->AppModule\n\n\n\n\n\nHttpResponseHandling\n\nHttpResponseHandling\n\nAppModule -->\n\nHttpResponseHandling->AppModule\n\n\n\n\n\nNavigationService\n\nNavigationService\n\nAppModule -->\n\nNavigationService->AppModule\n\n\n\n\n\nResponseSnackbarService\n\nResponseSnackbarService\n\nAppModule -->\n\nResponseSnackbarService->AppModule\n\n\n\n\n\nRestApiService\n\nRestApiService\n\nAppModule -->\n\nRestApiService->AppModule\n\n\n\nRoomModule -->\n\nRestApiService->RoomModule\n\n\n\n\n\nRoomsServiceService\n\nRoomsServiceService\n\nAppModule -->\n\nRoomsServiceService->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\nRoomModule -->\n\nUserService->RoomModule\n\n\n\n\n\nWarningDialogService\n\nWarningDialogService\n\nAppModule -->\n\nWarningDialogService->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nRoomModule -->\n\nChatComponent->RoomModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nRoomModule -->\n\nViewComponent->RoomModule\n\n\n\n\n\nChatService\n\nChatService\n\nRoomModule -->\n\nChatService->RoomModule\n\n\n\n\n\nSpotifyComponentComponent\n\nSpotifyComponentComponent\n\nSpotifyApiModule -->\n\nSpotifyComponentComponent->SpotifyApiModule\n\n\n\n\n\nSpotifyRestService\n\nSpotifyRestService\n\nSpotifyApiModule -->\n\nSpotifyRestService->SpotifyApiModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        12 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
